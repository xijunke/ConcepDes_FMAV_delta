%!PS-Adobe-3.0 EPSF-3.0
%%Title: (MATLAB)
%%Version: 1 6
%%Creator: Adobe Acrobat 7.0
%%CreationDate: 20:34:04 06/14/16
%%For: (user)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%ADO_ContainsXMP: MainFirst
%%BoundingBox: 38 72 797 451
%%HiResBoundingBox: 38.4 71.8 796.8 451.0
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L2 W1 vm op crd OS scsa T h ef bg ucr sf ef r b fa pr seps ttf hb EF t2 irt  0
%%BeginResource: procset l2check 6.0 1
%%Copyright: Copyright 1993,2001 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: This application does not support) dup show
72 580 moveto (printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (As a workaround, try selecting Print As Image from) show
72 480 moveto (the Advanced Print dialog.) show
showpage
quit
}
if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
/T0AddT42Mtx2
{
	/CIDFont findresource /Metrics2 get begin def end
}bind def
end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.19 0
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.
%%Version: 1.19 0
systemdict /languagelevel known dup
	{ currentglobal false setglobal }
	{ false }
ifelse
exch
userdict /Adobe_CoolType_Utility 2 copy known
	{ 2 copy get dup maxlength 25 add dict copy }
	{ 25 dict }
ifelse put
Adobe_CoolType_Utility
	begin
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch /eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{ globaldict begin currentglobal true setglobal }
if
	/ct_AddStdCIDMap
		ct_Level2?
			{ {
			((Hex) 57 StartData
			0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
			7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
			d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
			cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec
			} }
			{ {
			<BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
			4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> eexec
			} }
		ifelse bind def
userdict /cid_extensions known
dup { cid_extensions /cid_UpdateDB known and } if
	 {
	 cid_extensions
	 begin
	 /cid_GetCIDSystemInfo
		 {
		 1 index type /stringtype eq
			 { exch cvn exch }
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				 {
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					 {
					 1 index load
					 3 index get
					 dup null eq
						  { pop pop cid_UpdateDB }
						  {
						  exch
						  1 index /Created get eq
							  { exch pop exch pop }
							  { pop cid_UpdateDB }
						  ifelse
						  }
					 ifelse
					 }
					 { pop cid_UpdateDB }
				 ifelse
				 }
				 { cid_UpdateDB }
			 ifelse
			 end
		 } bind def
	 end
	 }
if
ct_Level2?
	{ end setglobal }
if
	/ct_UseNativeCapability?  systemdict /composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring () def
		/usewidths? true def
		end def
	ct_Level2? { setglobal } { pop } ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict /languagelevel known
				{ pop /CIDFont findresource /GlyphDirectory get }
				{
				1 index /CIDFont findresource /GlyphDirectory
				get dup type /dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			} def
		/+
			{
			systemdict /languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{ 1 dict begin }
			ifelse
			/$ exch def
			systemdict /languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			? { $ begin } if
			} def
		/? { $ type /dicttype eq } def
		/| {
			userdict /Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data /AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					  begin
						AddWidths?
								{
								Adobe_CoolType_Data /CC 3 index put
								? { def } { $ 3 1 roll put } ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont /Widths get exch CC exch put
								}
								{ ? { def } { $ 3 1 roll put } ifelse }
							ifelse
					end
				end
				}
				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse
				}
				{ ? { def } { $ 3 1 roll put } ifelse }
			ifelse
			} def
		/!
			{
			? { end } if
			systemdict /languagelevel known
				{ gvm setglobal }
			if
			end
			} def
		/: { string currentfile exch readstring pop } executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx [.001 0 0 .001 0 0] def
		/ct_1000Mtx [1000 0 0 1000 0 0] def
		/ct_raise {exch cvx exch errordict exch get exec stop} bind def
		/ct_reraise
			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print
					errordict exch get exec stop
			} bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			} bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility /ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{ dup string /dst_string exch def }
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex  get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string  dst_index 2 index putinterval
						length dst_index add /dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string  dst_index 2 index putinterval
						pop dup dst_index add /dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							  { arrayIndex get }
							  {
							  pop
							  exit
							  }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			} bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{ /unknowninstancename /Category resourcestatus }
			stopped
				{ cleartomark setglobal true }
				{ cleartomark currentglobal not exch setglobal }
			ifelse
				{
					{
					mark 3 1 roll /Category findresource
						begin
						ct_Vars /vm currentglobal put
						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
							{ cleartomark false }
							{ { 3 2 roll pop true } { cleartomark false } ifelse }
						ifelse
						ct_Vars /vm get setglobal
						end
					}
				}
				{ { resourcestatus } }
			ifelse bind def
			/CIDFont /Category ct_resourcestatus
				{ pop pop }
				{
				currentglobal  true setglobal
				/Generic /Category findresource
				dup length dict copy
				dup /InstanceType /dicttype put
				/CIDFont exch /Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit /ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				  /Registry (Adobe) def
				  /Ordering (Identity) def
				  /Supplement 0 def
				end def
				/CMapName /Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000> <FFFF>
				endcodespacerange
				1 begincidrange
				<0000> <FFFF> 0
				endcidrange
				endcmap
				CMapName currentdict /CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont  10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{ pop pop /defineresource /undefined ct_raise }
				ifelse
				} bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{ get 3 1 roll pop pop}
						{ pop pop /findresource /undefinedresource ct_raise }
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/ct_resourcestatus /resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup (Binary) eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{ cid_BYTE_COUNT () /SubFileDecode filter }
							stopped
								{ pop pop pop }
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup (Hex) eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{ null exch /ASCIIHexDecode filter /readstring }
							stopped
								{ pop exch pop (>) exch /readhexstring }
							if
							}
							{ (>) exch /readhexstring }
						ifelse
						load
						exit
						}
					if
					/StartData /typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch /GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop /readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				} bind def
			/StartData
				{
				mark
					{
					currentdict
					dup /FDArray get 0 get /FontMatrix get
					0 get 0.001 eq
						{
						dup /CDevProc known not
							{
							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known
								{ get }
								{
								pop pop
								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }
								}
							ifelse
							def
							}
						if
						}
						{
						 /CDevProc
							 {
							 pop pop pop pop pop
							 0
							 1 cid_temp /cid_CIDFONT get
							 /FDArray get 0 get
							 /FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							 } def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup /cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup /SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup /SubrMapOffset undef
										dup /SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{ pop }
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict /CIDFont defineresource pop
					end end
					}
				stopped
					{ cleartomark /StartData ct_reraise }
				if
				} bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit /ProcSet ct_resourcestatus
				{ true }
				{ /CIDInitC /ProcSet ct_resourcestatus }
			ifelse
				{
				pop pop
				/CIDInit /ProcSet findresource
				ct_UseNativeCapability?
					{ pop null }
					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }
				ifelse
				}
				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }
			ifelse
			ct_Vars exch /ct_oldCIDInit exch put
			} bind def
		/ct_restoreCIDInit
			{
			ct_Vars /ct_oldCIDInit get dup null ne
				{ /CIDInit exch /ProcSet defineresource pop }
				{ pop }
			ifelse
			} bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility /ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{ pop 0 }
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{ get }
								{ pop pop nullstring }
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{ 0 FDBytes ct_cvnsi }
									{ pop 0 }
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{ /charstring nullstring def exit }
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			} def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			} def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont /Widths get cid
					2 copy known
						{ get exch pop aload pop }
						{ pop pop stringwidth }
					ifelse
					}
					{ stringwidth }
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			} def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{ get }
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup /FontMatrix 2 copy known
						{ get }
						{ pop pop ct_defaultFontMtx }
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont /Widths get def
					/CharStrings 1 dict dup /.notdef
						<d841272cf18f54fc13> dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup /CharStrings get 1 index /Encoding get
			ct_dfCharCode get charstring put
			rootfont /WMode 2 copy known
				{ get }
				{ pop pop 0 }
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ ct_str1 show }
			ifelse
			} def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ ct_1000Mtx matrix concatmatrix concat }
				{ pop }
			ifelse
			/Private get
			Adobe_CoolType_Utility /ct_Level2? get not
				{
				ct_dfDict /Private
				3 -1 roll
					{ put }
				1183615869 internaldict /superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility /ct_Level2? get
				{ 1 index }
				{ 3 index /Private get mark 6 1 roll }
			ifelse
			dup /RunInt known
				{ /RunInt get }
				{ pop /CCRun }
			ifelse
			get exec
			Adobe_CoolType_Utility /ct_Level2? get not
				{ cleartomark }
			if
			} bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility /ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{ stop }
			if
			end
			end
			end
			end
			} bind def
		/BaseFontNameStr (BF00) def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/BuildChar /ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString /ct_Type3ShowCharString load def
				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup /lenIV 4 put def
				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def
				/PaintType 0 def
				/ct_ShowCharString /ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{ exit }
				if
				}
			for
			exch pop exch pop
			} bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch /WMode exch def
				exch /FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup /FontMatrix known
				{ dup /FontMatrix get /FontMatrix exch def }
				{ /FontMatrix matrix def }
			ifelse
				/bfCount 1 index /CIDCount get 256 idiv 1 add
					dup 256 gt { pop 256} if def
				/Encoding
					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for
					bfCount 1 255 { 2 copy bfCount put pop } for
					def
				/FDepVector bfCount dup 256 lt { 1 add } if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont /FontBBox known
						{ CIDFont /FontBBox get /FontBBox exch def }
					if
					CIDFont /CDevProc known
						{ CIDFont /CDevProc get /CDevProc exch def }
					if
					currentdict
					end
				BaseFontNameStr 3 (0) putinterval
				0 1 bfCount dup 256 eq { 1 sub } if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup /CIDFirstByte exch 256 mul def
						FontType 3 eq
							{ /ct_FDDict 2 dict def }
						if
						currentdict
						end
					1 index  16
					BaseFontNameStr  2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont /Widths get
						begin
						exch /CIDFont get /GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{ exch pop }
			ifelse
			} bind def
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{
				2 index /CMap ct_resourcestatus
					{ pop pop exch pop }
					{
					/CIDInit /ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch /WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry (Adobe) def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-) search
									{
									pop pop
									(-) search
										{
										dup length string copy
										exch pop exch pop
										}
										{ pop (Identity)}
									ifelse
									}
									{ pop  (Identity)  }
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000> <FFFF>
							endcodespacerange
							1 begincidrange
							<0000> <FFFF> 0
							endcidrange
							endcmap
							CMapName currentdict /CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index /CMap ct_resourcestatus
					{ pop pop }
					{
					/CIDInit /ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry (Adobe) def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-) search
							{
							pop pop
							(-) search
								{ dup length string copy exch pop exch pop }
								{ pop (Identity) }
							ifelse
							}
							{ pop (Identity) }
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000> <FFFF>
					endcodespacerange
					1 begincidrange
					<0000> <FFFF> 0
					endcidrange
					endcmap
					CMapName currentdict /CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		currentdict readonly pop
		end
	end
%%EndResource
%%BeginResource: file Pscript_CFF PSVER
userdict /ct_CffDict 6 dict put     
ct_CffDict begin                    
/F0Subr     
{
    systemdict /internaldict known 
   {
      1183615869 systemdict /internaldict get exec 
       /FlxProc known {save true} {false} ifelse
    } 
   {
      userdict /internaldict known not 
        { 
          userdict /internaldict 
          {
               count 0 eq 
             {/internaldict errordict /invalidaccess get exec} if 
             dup type /integertype ne 
             {/internaldict errordict /invalidaccess get exec} if 
             dup 1183615869 eq
             {pop 0} 
             {/internaldict errordict /invalidaccess get exec} 
             ifelse 
          } 
          dup 14 get 1 25 dict put 
          bind executeonly put 
       } if 
       1183615869 userdict /internaldict get exec 
       /FlxProc known {save true} {false} ifelse
    } ifelse
    [ 
       systemdict /internaldict known not 
       { 100 dict /begin cvx /mtx matrix /def cvx } if 
       systemdict /currentpacking known {currentpacking true setpacking} if 
       { 
          systemdict /internaldict known { 
          1183615869 systemdict /internaldict get exec 
          dup /$FlxDict known not { 
          dup dup length exch maxlength eq 
          { pop userdict dup /$FlxDict known not
          { 100 dict begin /mtx matrix def 
          dup /$FlxDict currentdict put end } if } 
          { 100 dict begin /mtx matrix def 
          dup /$FlxDict currentdict put end } 
          ifelse 
          } if /$FlxDict get begin } if 
          grestore 
          /exdef {exch def} def 
          /dmin exch abs 100 div def 
          /epX exdef /epY exdef 
          /c4y2 exdef /c4x2 exdef /c4y1 exdef /c4x1 exdef /c4y0 exdef /c4x0 exdef 
          /c3y2 exdef /c3x2 exdef /c3y1 exdef /c3x1 exdef /c3y0 exdef /c3x0 exdef 
          /c1y2 exdef /c1x2 exdef /c2x2 c4x2 def /c2y2 c4y2 def 
          /yflag c1y2 c3y2 sub abs c1x2 c3x2 sub abs gt def 
          /PickCoords {  
          {c1x0 c1y0 c1x1 c1y1 c1x2 c1y2 c2x0 c2y0 c2x1 c2y1 c2x2 c2y2} 
          {c3x0 c3y0 c3x1 c3y1 c3x2 c3y2 c4x0 c4y0 c4x1 c4y1 c4x2 c4y2} 
          ifelse 
          /y5 exdef /x5 exdef /y4 exdef /x4 exdef /y3 exdef /x3 exdef 
          /y2 exdef /x2 exdef /y1 exdef /x1 exdef /y0 exdef /x0 exdef 
          } def 
          mtx currentmatrix pop  
          mtx 0 get abs .00001 lt mtx 3 get abs .00001 lt or 
          {/flipXY -1 def} 
          {mtx 1 get abs .00001 lt mtx 2 get abs .00001 lt or 
          {/flipXY 1 def} 
          {/flipXY 0 def} 
          ifelse } 
          ifelse 
          /erosion 1 def 
          systemdict /internaldict known { 
           1183615869 systemdict /internaldict get exec dup  
          /erosion known 
          {/erosion get /erosion exch def} 
          {pop} 
          ifelse 
          } if 
          yflag 
          {
              flipXY 0 eq c3y2 c4y2 eq or 
             {false PickCoords}
             {
                  /shrink c3y2 c4y2 eq 
                {0}{c1y2 c4y2 sub c3y2 c4y2 sub div abs} ifelse def 
                /yshrink {c4y2 sub shrink mul c4y2 add} def 
                /c1y0 c3y0 yshrink def /c1y1 c3y1 yshrink def 
                /c2y0 c4y0 yshrink def /c2y1 c4y1 yshrink def 
                /c1x0 c3x0 def /c1x1 c3x1 def /c2x0 c4x0 def /c2x1 c4x1 def 
                /dY 0 c3y2 c1y2 sub round 
                dtransform flipXY 1 eq {exch} if pop abs def 
                dY dmin lt PickCoords 
                y2 c1y2 sub abs 0.001 gt {
                   c1x2 c1y2 transform flipXY 1 eq {exch} if  
                   /cx exch def /cy exch def 
                   /dY 0 y2 c1y2 sub round dtransform flipXY 1 eq {exch} 
                   if pop def 
                   dY round dup 0 ne 
                   {/dY exdef } 
                   {pop dY 0 lt {-1}{1} ifelse /dY exdef} 
                   ifelse 
                   /erode PaintType 2 ne erosion 0.5 ge and def  
                   erode {/cy cy 0.5 sub def} if 
                   /ey cy dY add def   
                   /ey ey ceiling ey sub ey floor add def   
                   erode {/ey ey 0.5 add def} if   
                   ey cx flipXY 1 eq {exch} if itransform exch pop  
                   y2 sub /eShift exch def  
                   /y1 y1 eShift add def /y2 y2 eShift add def /y3 y3  
                   eShift add def  
                } if  
             } ifelse  
          } 
          {
              flipXY 0 eq c3x2 c4x2 eq or  
             {false PickCoords }  
             { /shrink c3x2 c4x2 eq  
                {0}{c1x2 c4x2 sub c3x2 c4x2 sub div abs} ifelse def  
                /xshrink {c4x2 sub shrink mul c4x2 add} def  
                /c1x0 c3x0 xshrink def /c1x1 c3x1 xshrink def  
                /c2x0 c4x0 xshrink def /c2x1 c4x1 xshrink def  
                /c1y0 c3y0 def /c1y1 c3y1 def /c2y0 c4y0 def /c2y1 c4y1 def  
                /dX c3x2 c1x2 sub round 0 dtransform  
                flipXY -1 eq {exch} if pop abs def 
                dX dmin lt PickCoords  
                x2 c1x2 sub abs 0.001 gt {  
                   c1x2 c1y2 transform flipXY -1 eq {exch} if  
                   /cy exch def /cx exch def   
                   /dX x2 c1x2 sub round 0 dtransform flipXY -1 eq {exch} if pop def  
                   dX round dup 0 ne  
                   {/dX exdef}  
                   {pop dX 0 lt {-1}{1} ifelse /dX exdef}  
                   ifelse  
                   /erode PaintType 2 ne erosion .5 ge and def 
                   erode {/cx cx .5 sub def} if  
                   /ex cx dX add def  
                   /ex ex ceiling ex sub ex floor add def  
                   erode {/ex ex .5 add def} if  
                   ex cy flipXY -1 eq {exch} if itransform pop  
                   x2 sub /eShift exch def  
                   /x1 x1 eShift add def /x2 x2 eShift add def /x3 x3 eShift add def  
                } if  
             } ifelse  
          } ifelse 
          x2 x5 eq y2 y5 eq or  
          {x5 y5 lineto }  
          {x0 y0 x1 y1 x2 y2 curveto  
          x3 y3 x4 y4 x5 y5 curveto}  
          ifelse  
          epY epX   
       }  
       systemdict /currentpacking known {exch setpacking} if   
       /exec cvx /end cvx 
    ] cvx  
    executeonly 
    exch  
    {pop true exch restore}   
    {   
       systemdict /internaldict known not  
       {1183615869 userdict /internaldict get exec  
       exch /FlxProc exch put true}  
       {1183615869 systemdict /internaldict get exec  
       dup length exch maxlength eq  
       {false}   
       {1183615869 systemdict /internaldict get exec 
       exch /FlxProc exch put true}  
       ifelse}  
       ifelse
    } ifelse  
    {
       systemdict /internaldict known  
       {1183615869 systemdict /internaldict get exec /FlxProc get exec}  
       {1183615869 userdict /internaldict get exec /FlxProc get exec}  
       ifelse   
    } if  
} executeonly def
/F1Subr
{gsave currentpoint newpath moveto} bind def 
/F2Subr
{currentpoint grestore gsave currentpoint newpath moveto} bind  def
/HSSubr 
{
   systemdict /internaldict known not
   {pop 3}
   {1183615869 systemdict /internaldict get exec
    dup /startlock known
    {/startlock get exec}
    {dup /strtlck known
    {/strtlck get exec}
    {pop 3}
    ifelse}
    ifelse}
    ifelse
} bind def
end                                 
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/masks [ 2#10000000
2#11000000
2#11100000
2#11110000
2#11111000
2#11111100
2#11111110
2#11111111 ] def
/addNBits
{
/numBits exch def
/byte exch def
OutBitOffset numBits add 8 gt
{
byte OutBitOffset 8 sub bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutByteIndex OutByteIndex 1 add def
/bitsDoneSoFar OutBitOffset def
/OutBitOffset numBits 8 OutBitOffset sub sub def
OutBitOffset 0 gt
{
byte bitsDoneSoFar bitshift
masks numBits bitsDoneSoFar sub get and
OutBuffer OutByteIndex 3 -1 roll put
} if
}
{
byte masks numBits 1 sub get and
OutBitOffset neg bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutBitOffset OutBitOffset numBits add def
OutBitOffset 8 eq
{
/OutBitOffset 0 def
/OutByteIndex OutByteIndex 1 add def
} if
} ifelse
} bind def
/DevNNFilter
{
/InBuffer Width NumComps mul BitsPerComponent mul 7 add 8 idiv string def
AllSource InBuffer readstring pop pop
/outlen Width NewNumComps mul BitsPerComponent mul 7 add 8 idiv def
/OutBuffer outlen string def
0 1 outlen 1 sub { OutBuffer exch 0 put } for
/InByteIndex 0 def
/InBitOffset 0 def
/OutByteIndex 0 def
/OutBitOffset 0 def
/KeepArray NumComps array def
0 1 NumComps 1 sub { KeepArray exch true put } for
DevNNones { KeepArray exch false put } forall
Width {
KeepArray
{
{
/bitsLeft BitsPerComponent def
{
bitsLeft 0 le { exit } if
/bitsToDo 8 InBitOffset sub dup bitsLeft gt { pop bitsLeft } if def
InBuffer InByteIndex get
InBitOffset bitshift
bitsToDo addNBits
/bitsLeft bitsLeft bitsToDo sub def
InBitOffset bitsToDo add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
} loop
}
{
InBitOffset BitsPerComponent add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
}
ifelse
}
forall
} repeat
OutBuffer
} bd
/pdf_image
{
20 dict copy
begin
/UnusedNones where { /UnusedNones get}{false} ifelse
{
/NumComps Decode length 2 div cvi def
/OrigDecode Decode def
/NumNones DevNNones length def
/NewNumComps NumComps NumNones sub def
/Decode NewNumComps 2 mul cvi array def
/devNNindx 0 def
/decIndx 0 def
/cmpIndx 0 def
NumComps {
cmpIndx DevNNones devNNindx get eq
{
/devNNindx devNNindx 1 add dup NumNones eq {pop 0} if def
}
{
Decode decIndx OrigDecode cmpIndx 2 mul get put
Decode decIndx 1 add OrigDecode cmpIndx 2 mul 1 add get put
/decIndx decIndx 2 add def
} ifelse
/cmpIndx cmpIndx 1 add def
} repeat
_Filters dup length 1 sub get /AllSource exch def
/DataSource { DevNNFilter } def
}
{ _Filters dup length 1 sub get /DataSource exch def }
ifelse
currentdict image
_Filters pdf_flushfilters
end
} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
miDict /InterleaveType get 3 eq
{ MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse }
if
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset pdflev2 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/undefineRes/undefineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
cvi
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%IncludeResource TimesNewRoman,Bold
[ 0 /space/dotlessi/caron/space/space/space
/space/space/space/space/space/space
/space/space/space/space/space/space
/space/space/space/space/space/space
/space/space/space/space/space/space
/space/space/space/exclam/quotedbl/numbersign
/dollar/percent/ampersand/quotesingle/parenleft/parenright
/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five
/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A
/B/C/D/E/F/G
/H/I/J/K/L/M
/N/O/P/Q/R/S
/T/U/V/W/X/Y
/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e
/f/g/h/i/j/k
/l/m/n/o/p/q
/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright
/asciitilde/bullet/Euro/bullet/quotesinglbase/florin
/quotedblbase/ellipsis/dagger/daggerdbl/circumflex/perthousand
/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
/bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright
/oe/bullet/zcaron/Ydieresis/space/exclamdown
/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen
/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring
/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis
/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde
/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde
/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis
/N10/TimesNewRoman,Bold -1 TZ
%%IncludeResource Arial
[ 0 /space/dotlessi/caron/space/space/space
/space/space/space/space/space/space
/space/space/space/space/space/space
/space/space/space/space/space/space
/space/space/space/space/space/space
/space/space/space/exclam/quotedbl/numbersign
/dollar/percent/ampersand/quotesingle/parenleft/parenright
/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five
/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A
/B/C/D/E/F/G
/H/I/J/K/L/M
/N/O/P/Q/R/S
/T/U/V/W/X/Y
/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e
/f/g/h/i/j/k
/l/m/n/o/p/q
/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright
/asciitilde/bullet/Euro/bullet/quotesinglbase/florin
/quotedblbase/ellipsis/dagger/daggerdbl/circumflex/perthousand
/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
/bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright
/oe/bullet/zcaron/Ydieresis/space/exclamdown
/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen
/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring
/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis
/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde
/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde
/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis
/N13/Arial -1 TZ
%%IncludeResource TimesNewRoman,BoldItalic
[ 0 /space/dotlessi/caron/space/space/space
/space/space/space/space/space/space
/space/space/space/space/space/space
/space/space/space/space/space/space
/space/space/space/space/space/space
/space/space/space/exclam/quotedbl/numbersign
/dollar/percent/ampersand/quotesingle/parenleft/parenright
/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five
/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A
/B/C/D/E/F/G
/H/I/J/K/L/M
/N/O/P/Q/R/S
/T/U/V/W/X/Y
/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e
/f/g/h/i/j/k
/l/m/n/o/p/q
/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright
/asciitilde/bullet/Euro/bullet/quotesinglbase/florin
/quotedblbase/ellipsis/dagger/daggerdbl/circumflex/perthousand
/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
/bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright
/oe/bullet/zcaron/Ydieresis/space/exclamdown
/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen
/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring
/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis
/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde
/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde
/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis
/N17/TimesNewRoman,BoldItalic -1 TZ
%%IncludeResource Arial,Italic
[ 0 /space/dotlessi/caron/space/space/space
/space/space/space/space/space/space
/space/space/space/space/space/space
/space/space/space/space/space/space
/space/space/space/space/space/space
/space/space/space/exclam/quotedbl/numbersign
/dollar/percent/ampersand/quotesingle/parenleft/parenright
/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five
/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A
/B/C/D/E/F/G
/H/I/J/K/L/M
/N/O/P/Q/R/S
/T/U/V/W/X/Y
/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e
/f/g/h/i/j/k
/l/m/n/o/p/q
/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright
/asciitilde/bullet/Euro/bullet/quotesinglbase/florin
/quotedblbase/ellipsis/dagger/daggerdbl/circumflex/perthousand
/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
/bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright
/oe/bullet/zcaron/Ydieresis/space/exclamdown
/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen
/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring
/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis
/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde
/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde
/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis
/N22/Arial,Italic -1 TZ

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 3661 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1-701">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/">
         <xap:CreateDate>2016-06-14T20:34:04+08:00</xap:CreateDate>
         <xap:ModifyDate>2016-06-14T20:34:04+08:00</xap:ModifyDate>
         <xap:MetadataDate>2016-06-14T20:34:04+08:00</xap:MetadataDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:8CFC4ED82B32E611B136A84D58FCB29C</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:8CFC4ED82B32E611B136A84D58FCB29C</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:2550794f-4cdd-4856-98e2-e42cae7dfc0a</stRef:instanceID>
            <stRef:documentID>uuid:33bb4156-42a3-4d96-a809-08fa1fa44d51</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">MATLAB</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:creator>
            <rdf:Seq>
               <rdf:li>user</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:format>application/eps</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>

% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
 PDF /docinitialize get exec
PDFVars begin PDF begin PDFVars/InitAll get exec
38.4 71.8 758.4 379.2 rectclip
/N15 [/CIEBasedABC 20 dict
dup /CreationDate (19980209064900) put
dup /RenderingIntent (RelativeColorimetric) put
dup /Description (sRGB IEC61966-2.1) put
dup /ColorSpace (RGB ) put
dup /Copyright (Copyright (c) 1998 Hewlett-Packard Company) put
dup /ProfileID <1D3FDA2EDB4A89AB60A23C5F7C7D81DD> put
dup /DecodeABC [
{{0 0.00031 0.00061 0.0009 0.0012 0.00151 0.00181 0.00212 0.00242 0.00271
0.00302 0.00334 0.00366 0.00401 0.00437 0.00476 0.00515 0.00558 0.00602 0.00648
0.00696 0.00745 0.00798 0.00852 0.00908 0.00966 0.01027 0.01089 0.01153 0.0122
0.0129 0.01362 0.01435 0.01511 0.01589 0.0167 0.01752 0.01837 0.01925 0.02015
0.02107 0.02203 0.02299 0.02399 0.02501 0.02606 0.02713 0.02822 0.02934 0.03049
0.03166 0.03287 0.03409 0.03533 0.03662 0.03792 0.03925 0.04061 0.04199 0.04341
0.04484 0.04631 0.04781 0.04933 0.05088 0.05245 0.05406 0.05569 0.05736 0.05904
0.06077 0.06252 0.0643 0.06611 0.06794 0.06981 0.0717 0.07363 0.07558 0.07756
0.07959 0.08162 0.0837 0.08581 0.08795 0.09011 0.09231 0.09454 0.0968 0.09909
0.10142 0.10376 0.10616 0.10857 0.11102 0.11351 0.11602 0.11856 0.12114 0.12376
0.12639 0.12907 0.13178 0.13452 0.13729 0.14009 0.14294 0.14581 0.14873 0.15166
0.15463 0.15765 0.16068 0.16376 0.16687 0.17001 0.17319 0.17641 0.17965 0.18293
0.18625 0.1896 0.19299 0.19641 0.19987 0.20335 0.20688 0.21045 0.21405 0.21767
0.22134 0.22505 0.22879 0.23257 0.23638 0.24023 0.24411 0.24804 0.25199 0.25599
0.26002 0.26409 0.2682 0.27234 0.27651 0.28073 0.28499 0.28928 0.29361 0.29798
0.30238 0.30683 0.3113 0.31582 0.32038 0.32497 0.3296 0.33428 0.33898 0.34372
0.34851 0.35333 0.3582 0.3631 0.36804 0.37302 0.37804 0.3831 0.38819 0.39333
0.3985 0.40372 0.40898 0.41427 0.41961 0.42498 0.43039 0.43585 0.44134 0.44688
0.45245 0.45806 0.46372 0.46942 0.47516 0.48094 0.48675 0.49261 0.49851 0.50445
0.51043 0.51646 0.52253 0.52863 0.53477 0.54097 0.54719 0.55347 0.55979 0.56613
0.57253 0.57897 0.58545 0.59198 0.59855 0.60515 0.6118 0.61849 0.62524 0.63201
0.63884 0.6457 0.6526 0.65955 0.66654 0.67357 0.68066 0.68778 0.69495 0.70215
0.7094 0.71669 0.72404 0.73142 0.73885 0.74632 0.75383 0.76138 0.76899 0.77663
0.78433 0.79206 0.79983 0.80765 0.81552 0.82343 0.83139 0.8394 0.84744 0.85554
0.86367 0.87185 0.88007 0.88835 0.89666 0.90503 0.91343 0.92189 0.93038 0.93892
0.94751 0.95614 0.96482 0.97355 0.98232 0.99114 1}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
dup
dup
] put
dup /MatrixABC [
0.2180189128 0.1112492942 0.0069565698
0.1925612492 0.358452993 0.0485281768
0.0715286348 0.0303053423 0.3569742448
] put
dup /MatrixLMN [1.9999694824 0 0 0 1.9999694824 0 0 0 1.9999694824] put
dup /BlackPoint [0 0 0] put
dup /WhitePoint [0.9642028809 1 0.8249053955] put]
/ColorSpace defineRes pop

%ADOBeginSubsetFont: KHTBAA+NSimSun-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (KHTBAA+NSimSun)
%%Title: (KHTBAA+NSimSun Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /KHTBAA+NSimSun def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-8 -145 1000 859} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 28762 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 1 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B5EE31F4> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /KHTBAA+NSimSun-Identity-H /Identity-H 0 [/KHTBAA+NSimSun] ct_ComposeFont pop end end
%ADOEndSubsetFont
%%BeginResource: encoding
% Identity-H
%PDF_BeginEncoding: N12 (KHTBAA+NSimSun-Identity-H)
/N12 (KHTBAA+NSimSun-Identity-H) /Identity-H [ (KHTBAA+NSimSun) ]
 /NoSubstitution [ /Serif ] 0 TZzero
%%EndResource
%%BeginResource: font DRIAAA+Symbol
ct_CffDict begin
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /DRIAAA+Symbol def
/FontInfo 8 dict dup begin
/Notice (Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated. All rights reserved.) def
/Weight (Medium) def
/ItalicAngle 0 def
/BaseFontName (Symbol) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 97 /alpha put
dup 102 /phi put
dup 176 /degree put
def
/UniqueID 42996 def
/FontBBox {-180 -293 1090 1010} def
end
systemdict begin
dup /Private
9 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-19 0 673 688 487 500] def
/StdHW [92] def
/StdVW [85] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs [{ct_CffDict/F0Subr get exec} {ct_CffDict/F1Subr get exec}
{ct_CffDict/F2Subr get exec} {ct_CffDict/HSSubr get exec}] def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
6 dict dup begin
/.notdef <1C60D8A8C9B8707C25> |-
/space <1C60D8A8C9B8707C25> |-
/alpha <1C60D8A8C9B66A6B2464872AB8D74D478B4D8F91A0BAD9644689F529
31F607E37922C8FECB2A14584A40B4215D234E99074CB7EE9043186C2CDF5BA7
8254D67B816D4F276294C8F024C35B1B89A8B3BB9B4D72253559D548316722D2
12DA47DADF46FA52ECDD667674269BD0AB8F415B2468B7A253567FC11D59F4F0
6445D87EAA98550A3A11C85CF6053AD856A596FEB33680D68017EB19B282D97E
713664F9652A58304884E9055536BF4558CEF27DB446A493D7B3FBD3FA1A7329
5C07970641ED538354B921FFA89D75C057F4EE5A9A41A954AFBFBD4A009EBA6E
F26FDF184ED8D725781A110CB844E806EBDCDCCD0361E4030B280EE27BB179E3
8740373A6C475609A9> |-
/phi <1C60D8A8C9B7B2022387C2289E82AF02CF65590325D2A1B074DFD68922
444B7E6108875C09CA15CC0876949C03B4267959D7D5513FD41B7163DD134E1E
2F44D62B1819184AD8576D71D9165AB2C1F6D45D7243E7834E6E91C7D5085C49
B0E25FFCE6BD4CDF558A4587FD04292E8789901F18C7EEEC8D02A4C9AB79> |-
/degree <1C60D8A8C9B70B6BB5B994FE22D5B207BC663574D3FB3B87DFDE286
07F9C75CFC81354F3644F84E57982C5CC870191BB42918FEBE47C1E2BBB1C8AB
2BC4BE3DE9121862323E921DBD87D550941> |-
end put
end
dup /FontName get exch definefont pop
end
end
%%EndResource
[ 2 /alpha/phi 32 /space 97 /alpha 102 /phi 176 /degree
/N14/DRIAAA+Symbol -1 TZG
q
38.4 71.8 m
796.8 71.8 l
796.8 451.0 l
38.4 451.0 l
h
W
n
q
n
0.0 62.733 850.98 441.96 re
W
n
n
[/DeviceGray] cs 1.0 sc
0.000000 62.733002 850.979980 441.959991 rectfill

Q
n
[/DeviceGray] cs 1.0 sc
94.800003 263.372986 692.640015 146.220001 rectfill

1 j
1.5 w
n
94.8 263.373 m
94.8 409.593 l
787.44 409.593 l
787.44 263.373 l
94.8 263.373 l
S
n
94.8 409.593 m
787.44 409.593 l
0.0 sc
S
n
787.47 409.533 m
787.47 409.593 l
0.0600586 w
S
1.5 w
n
94.8 263.373 m
787.44 263.373 l
S
n
787.47 263.313 m
787.47 263.373 l
0.0600586 w
S
1.5 w
n
787.44 263.373 m
787.44 409.593 l
S
n
787.47 409.533 m
787.47 409.593 l
0.0600586 w
S
1.5 w
n
94.8 263.373 m
94.8 409.593 l
S
n
94.83 409.533 m
94.83 409.593 l
0.0599976 w
S
1.5 w
n
94.8 263.373 m
787.44 263.373 l
S
n
787.47 263.313 m
787.47 263.373 l
0.0600586 w
S
1.5 w
n
94.8 263.373 m
94.8 409.593 l
S
n
94.83 409.533 m
94.83 409.593 l
0.0599976 w
S
1.5 w
n
94.8 263.373 m
94.8 270.333 l
S
n
94.83 270.273 m
94.83 270.333 l
0.0599976 w
S
1.5 w
n
94.8 409.593 m
94.8 402.693 l
S
n
94.83 402.633 m
94.83 402.693 l
0.0599976 w
S
1.5 w
n
164.04 263.373 m
164.04 270.333 l
S
n
164.07 270.273 m
164.07 270.333 l
0.0599976 w
S
1.5 w
n
164.04 409.593 m
164.04 402.693 l
S
n
164.07 402.633 m
164.07 402.693 l
0.0599976 w
S
1.5 w
n
233.28 263.373 m
233.28 270.333 l
S
n
233.31 270.273 m
233.31 270.333 l
0.0599976 w
S
1.5 w
n
233.28 409.593 m
233.28 402.693 l
S
n
233.31 402.633 m
233.31 402.693 l
0.0599976 w
S
1.5 w
n
302.58 263.373 m
302.58 270.333 l
S
n
302.61 270.273 m
302.61 270.333 l
0.0599976 w
S
1.5 w
n
302.58 409.593 m
302.58 402.693 l
S
n
302.61 402.633 m
302.61 402.693 l
0.0599976 w
S
1.5 w
n
371.82 263.373 m
371.82 270.333 l
S
n
371.85 270.273 m
371.85 270.333 l
0.0600281 w
S
1.5 w
n
371.82 409.593 m
371.82 402.693 l
S
n
371.85 402.633 m
371.85 402.693 l
0.0600281 w
S
1.5 w
n
441.12 263.373 m
441.12 270.333 l
S
n
441.15 270.273 m
441.15 270.333 l
0.0599976 w
S
1.5 w
n
441.12 409.593 m
441.12 402.693 l
S
n
441.15 402.633 m
441.15 402.693 l
0.0599976 w
S
1.5 w
n
510.36 263.373 m
510.36 270.333 l
S
n
510.39 270.273 m
510.39 270.333 l
0.0600281 w
S
1.5 w
n
510.36 409.593 m
510.36 402.693 l
S
n
510.39 402.633 m
510.39 402.693 l
0.0600281 w
S
1.5 w
n
579.6 263.373 m
579.6 270.333 l
S
n
579.63 270.273 m
579.63 270.333 l
0.0599976 w
S
1.5 w
n
579.6 409.593 m
579.6 402.693 l
S
n
579.63 402.633 m
579.63 402.693 l
0.0599976 w
S
1.5 w
n
648.9 263.373 m
648.9 270.333 l
S
n
648.93 270.273 m
648.93 270.333 l
0.0599976 w
S
1.5 w
n
648.9 409.593 m
648.9 402.693 l
S
n
648.93 402.633 m
648.93 402.693 l
0.0599976 w
S
1.5 w
n
718.14 263.373 m
718.14 270.333 l
S
n
718.17 270.273 m
718.17 270.333 l
0.0599365 w
S
1.5 w
n
718.14 409.593 m
718.14 402.693 l
S
n
718.17 402.633 m
718.17 402.693 l
0.0599365 w
S
1.5 w
n
787.44 263.373 m
787.44 270.333 l
S
n
787.47 270.273 m
787.47 270.333 l
0.0600586 w
S
1.5 w
n
787.44 409.593 m
787.44 402.693 l
S
n
787.47 402.633 m
787.47 402.693 l
0.0600586 w
S
1.5 w
n
94.8 263.373 m
101.7 263.373 l
S
n
101.73 263.313 m
101.73 263.373 l
0.0599976 w
S
1.5 w
n
787.44 263.373 m
780.48 263.373 l
S
n
780.51 263.313 m
780.51 263.373 l
0.0599976 w
S
1.5 w
66.18 258.273 m
/N10 13.98 Tf
(-100)
[4.65524 6.99 6.99 6.99 ] pdfxs
n
94.8 299.973 m
101.7 299.973 l
S
n
101.73 299.913 m
101.73 299.973 l
0.0599976 w
S
1.5 w
n
787.44 299.973 m
780.48 299.973 l
S
n
780.51 299.913 m
780.51 299.973 l
0.0599976 w
S
1.5 w
73.2 294.873 m
(-50)
[4.65524 6.99 6.99 ] pdfxs
n
94.8 336.513 m
101.7 336.513 l
S
n
101.73 336.453 m
101.73 336.513 l
0.0599976 w
S
1.5 w
n
787.44 336.513 m
780.48 336.513 l
S
n
780.51 336.453 m
780.51 336.513 l
0.0599976 w
S
1.5 w
84.9 331.413 m
(0) show
n
94.8 373.053 m
101.7 373.053 l
S
n
101.73 372.993 m
101.73 373.053 l
0.0599976 w
S
1.5 w
n
787.44 373.053 m
780.48 373.053 l
S
n
780.51 372.993 m
780.51 373.053 l
0.0599976 w
S
1.5 w
77.88 367.953 m
(50)
[6.99 6.99 ] pdfxs
n
94.8 409.593 m
101.7 409.593 l
S
n
101.73 409.533 m
101.73 409.593 l
0.0599976 w
S
1.5 w
n
787.44 409.593 m
780.48 409.593 l
S
n
780.51 409.533 m
780.51 409.593 l
0.0599976 w
S
1.5 w
70.86 404.493 m
(100)
[6.99 6.99 6.99 ] pdfxs
n
94.8 409.593 m
787.44 409.593 l
S
n
787.47 409.533 m
787.47 409.593 l
0.0600586 w
S
1.5 w
n
94.8 263.373 m
787.44 263.373 l
S
n
787.47 263.313 m
787.47 263.373 l
0.0600586 w
S
1.5 w
n
787.44 263.373 m
787.44 409.593 l
S
n
787.47 409.533 m
787.47 409.593 l
0.0600586 w
S
1.5 w
n
94.8 263.373 m
94.8 409.593 l
S
n
94.83 409.533 m
94.83 409.593 l
0.0599976 w
S
1.5 w
q
n
94.8 317.673 443.16 62.04 re
W
n
1.98 w
n
94.8 378.633 m
168.47 378.668 241.382 371.21 314.04 359.433 c
388.594 347.561 462.438 331.659 536.82 318.813 c
[/CIEBasedABC 20 dict
dup /CreationDate (19980209064900) put
dup /RenderingIntent (RelativeColorimetric) put
dup /Description (sRGB IEC61966-2.1) put
dup /ColorSpace (RGB ) put
dup /Copyright (Copyright (c) 1998 Hewlett-Packard Company) put
dup /ProfileID <1D3FDA2EDB4A89AB60A23C5F7C7D81DD> put
dup /DecodeABC [
{{0 0.00031 0.00061 0.0009 0.0012 0.00151 0.00181 0.00212 0.00242 0.00271
0.00302 0.00334 0.00366 0.00401 0.00437 0.00476 0.00515 0.00558 0.00602 0.00648
0.00696 0.00745 0.00798 0.00852 0.00908 0.00966 0.01027 0.01089 0.01153 0.0122
0.0129 0.01362 0.01435 0.01511 0.01589 0.0167 0.01752 0.01837 0.01925 0.02015
0.02107 0.02203 0.02299 0.02399 0.02501 0.02606 0.02713 0.02822 0.02934 0.03049
0.03166 0.03287 0.03409 0.03533 0.03662 0.03792 0.03925 0.04061 0.04199 0.04341
0.04484 0.04631 0.04781 0.04933 0.05088 0.05245 0.05406 0.05569 0.05736 0.05904
0.06077 0.06252 0.0643 0.06611 0.06794 0.06981 0.0717 0.07363 0.07558 0.07756
0.07959 0.08162 0.0837 0.08581 0.08795 0.09011 0.09231 0.09454 0.0968 0.09909
0.10142 0.10376 0.10616 0.10857 0.11102 0.11351 0.11602 0.11856 0.12114 0.12376
0.12639 0.12907 0.13178 0.13452 0.13729 0.14009 0.14294 0.14581 0.14873 0.15166
0.15463 0.15765 0.16068 0.16376 0.16687 0.17001 0.17319 0.17641 0.17965 0.18293
0.18625 0.1896 0.19299 0.19641 0.19987 0.20335 0.20688 0.21045 0.21405 0.21767
0.22134 0.22505 0.22879 0.23257 0.23638 0.24023 0.24411 0.24804 0.25199 0.25599
0.26002 0.26409 0.2682 0.27234 0.27651 0.28073 0.28499 0.28928 0.29361 0.29798
0.30238 0.30683 0.3113 0.31582 0.32038 0.32497 0.3296 0.33428 0.33898 0.34372
0.34851 0.35333 0.3582 0.3631 0.36804 0.37302 0.37804 0.3831 0.38819 0.39333
0.3985 0.40372 0.40898 0.41427 0.41961 0.42498 0.43039 0.43585 0.44134 0.44688
0.45245 0.45806 0.46372 0.46942 0.47516 0.48094 0.48675 0.49261 0.49851 0.50445
0.51043 0.51646 0.52253 0.52863 0.53477 0.54097 0.54719 0.55347 0.55979 0.56613
0.57253 0.57897 0.58545 0.59198 0.59855 0.60515 0.6118 0.61849 0.62524 0.63201
0.63884 0.6457 0.6526 0.65955 0.66654 0.67357 0.68066 0.68778 0.69495 0.70215
0.7094 0.71669 0.72404 0.73142 0.73885 0.74632 0.75383 0.76138 0.76899 0.77663
0.78433 0.79206 0.79983 0.80765 0.81552 0.82343 0.83139 0.8394 0.84744 0.85554
0.86367 0.87185 0.88007 0.88835 0.89666 0.90503 0.91343 0.92189 0.93038 0.93892
0.94751 0.95614 0.96482 0.97355 0.98232 0.99114 1}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
dup
dup
] put
dup /MatrixABC [
0.2180189128 0.1112492942 0.0069565698
0.1925612492 0.358452993 0.0485281768
0.0715286348 0.0303053423 0.3569742448
] put
dup /MatrixLMN [1.9999694824 0 0 0 1.9999694824 0 0 0 1.9999694824] put
dup /BlackPoint [0 0 0] put
dup /WhitePoint [0.9642028809 1 0.8249053955] put]
/E2 exch /ColorSpace defineRes

cs 1.0 0.0 0.0 sc
S
Q
q
n
535.74 293.253 251.76 26.64 re
W
n
1.98 w
n
536.82 318.813 m
619.875 304.249 702.997 294.294 787.44 294.393 c
/E2 /ColorSpace findRes cs 1.0 0.0 0.0 sc
S
Q
q
n
94.8 368.253 443.16 35.16 re
W
n
1.98 w
n
94.8 402.333 m
167.638 391.376 240.588 380.668 314.04 374.733 c
388.415 368.584 462.335 367.706 536.82 372.453 c
/E2 /ColorSpace findRes cs 0.0 1.0 0.0 sc
S
Q
q
n
535.74 371.313 251.76 32.1 re
W
n
1.98 w
n
536.82 372.453 m
620.956 377.706 704.152 389.791 787.44 402.333 c
/E2 /ColorSpace findRes cs 0.0 1.0 0.0 sc
S
Q
0 j
0.799 w
1.0 M
57.3 252.933 m
%ADOBeginSubsetFont: KHTBAA+NSimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
/KHTBAA+NSimSun 1 GetGlyphDirectory
6397 <001C60D8A8C9B5EE3102A17D8EFDE186298B5521234D7C5DD72C05C41C
B1A5005280BD054BEF50E7711C10321C03AA123099F8D928ABF0C3C410168198
9255E31D3842800BA0BF318D4B926311FF194962D7EE21BE8EE099BDEBED5063
D081135474C94F6CF0FD15888363D7FC0EFABFDB4DAB9846CD8E38900C64C79B
CAEC049DD47154A52C4672BE7B7E91F7FEE249BA508608EBB1DCE4EDF605343C
6303564592BC686856F21E454FFD054CBFBD1FCC291EA5A163DC4087E5E125AF
D16137FD4F2D24F11546A586AECF2C346680AD951DBAF0C3A1DFC3BC50B2C224
BE0D3E6EEF77111056713EE1> |
!
end
end end
%ADOEndSubsetFont
/N12 [0.0 19.98 -19.98 0.0 0.0 0.0] Tf
(\030\375) show
n
57.3 252.933 m
(\030\375) pdf_strokepath
57.3 272.973 m
%ADOBeginSubsetFont: KHTBAA+NSimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
/KHTBAA+NSimSun 1 GetGlyphDirectory
6275 <001C60D8A8C9B5EE3102AD5A8A71374FFF4ECAF0685AFC8EBB8AE23ED3
B90686EC81CDCD20FC8924A6E626ACA6B6D0624677DC18A6EFFC0A870119C9E9
B4A6377CA3D5B0B686E2DD048D1D65D13DE3D7796BCAA3E6118E16A74B88F012
D20C43623277A142DEB495F5E400C51848EFCFD20A4B900B8FA4EDCC18B275B6
0B2E3EE048C1712BE1170EDE979E16BE2AFA9623ACD2B6B8817AE1903C575690
91E2EBA4B110008FCEE775DD024B8646F73DC0BB84E0147B6F> |
!
end
end end
%ADOEndSubsetFont
(\030\203) show
n
57.3 272.973 m
(\030\203) pdf_strokepath
57.3 293.013 m
%ADOBeginSubsetFont: KHTBAA+NSimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
/KHTBAA+NSimSun 1 GetGlyphDirectory
16386 <001C60D8A8C9B5EE3102C0D629A251121610A095F82BA05727F14D43C
090FB80802707237900EBA55C89C0BE9612D802602EC8E16AD25D567DD2856D4
28BCE55A90556D5F2601B1024265BB687866F7B1B13FDAB4446C287A8AFBC820
FEAD1A8E523F8520044E6A96AAAD15A122BFF5ACBBC41F5C65218CF6010B9302
C131C2D8181CF1880F7332735ED6A503306EDA6C4FA76CB1CFC3D29AC3360C40
8C9D69A7B5AEBEE495C84497EFC13D2E8A3F1309CCD791F58B9669A8989304A3
9DE6A35D41F5976F0449CF2938B72A6C2EE5340858940A12AD363266C62DD6DC
DB6DC32AC35E562FA2ADA2B2BC51C18C08D33EF8F5BC057080412AE5AC29C85D
C6BB72C54619F17E0BF922144B4734B632BC6286C0F47> |
!
end
end end
%ADOEndSubsetFont
(@\002) show
n
57.3 293.013 m
(@\002) pdf_strokepath
57.3 313.053 m
%ADOBeginSubsetFont: KHTBAA+NSimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
/KHTBAA+NSimSun 1 GetGlyphDirectory
2748 <001C60D8A8C9B5EE3102400FF855B8C6B4CF5FEEF83B2824A63FA41B75
1CCA22A91994FAACF7FC41695784599AC660E72F103AAC89FB4AD272622380C9
AFEA77D9A0BF9FD6A14847A479641A9BAC9DD8C2CDE8D9133762206D0B0EBF3E
3A35B05CB559421BE9E0D928C6D28199BE81AD01CB4F319EA6B4FC6C476D6817
91BA3E899AB829AFA48FF1ADAA8EAECE43835FE53CA143F7E46BE7EFD9C27C02
5449EF9AEE8862B4401F169641AD86CE7BEC9B6DE9B11EEC77A1850FCE9BFA2F
4CFF83DE324D7ACE45DE6090741C7967944193CAA3657C6575E2B2DF54AE0C1F
3DEA490FC7F2454DBF7783> |
!
end
end end
%ADOEndSubsetFont
(\n\274) show
n
57.3 313.053 m
(\n\274) pdf_strokepath
57.3 333.093 m
%ADOBeginSubsetFont: KHTBAA+NSimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
/KHTBAA+NSimSun 1 GetGlyphDirectory
6301 <001C60D8A8C9B5EE31033390C5FE6864EFEE0286578E7E4F2F4E4CD14F
A66441CE83C5464FD01DFB0DCB52A31215BD5507C9D0006BD05FC284F9A4C232
89A5C44466CA922DDCDD02E489E770844911A0F9CDC22DB4AC2159235C851F2C
73542FC43F9DD536785BCB81466905EE34E392BDD77FFA4911DA54FD86C6D3FB
53C75614E6B806BD27FBD6EE6ACE8ECD7ABC553D8B68E2CA22E70566B34DD1DC
145C3319D5AE513EC398DC9CB386B000BC8CE65FE64DFBD617756EE193E52ACC
EC22D693DBB2D6BA78DBF7DA1334D0309F848DAE44039E43B28570520B2D3116
EB> |
!
end
end end
%ADOEndSubsetFont
(\030\235) show
n
57.3 333.093 m
(\030\235) pdf_strokepath
57.3 353.133 m
%ADOBeginSubsetFont: KHTBAA+NSimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
/KHTBAA+NSimSun 1 GetGlyphDirectory
17820 <001C60D8A8C9B5EE310DC6E98B9D83D14D30B7E9978F814C46CB80032
98FAE4C57AEA694C264FB7212A46A37999630E2269C9335D02DAB555B13E7E62
750C377935BD7D4A4F808DA1791DB8EFEB090D9598D839F642276EF458EA20C0
E897AEAB0E0253F0F37BC9A119107528C73FB97229A436A80EDEC981D02D76E3
0C52C68B40E185D44CC6D7CBBCD3741B5E5DA7CB98C54D291B3514280252AB65
44767E722D82FB6FEFFB2EB88DE6429ACA1A521AFA90208EBD67BDD2E61A8279
AF5020631DAE7953E58CD8BB2076A2A2E96BA3DB318FFDF75DF0C21DB0CD3C67
F89B2950BB2AA60A574FCFD65C5C4C88A3DA44BA5AC4A916C53782417241EE18
72C5DEF04FD5335DDB3E550DD3A057991A877BE1B17DC3A442B6A07530CB05F8
164875AE9374D785C172118F4E184054076368506E7349C8A1642E546436C52D
695270011DEE6C9AAA95F7E7703C5F2879B2E5229873C9BBB8C602AF1B80498> |
!
end
end end
%ADOEndSubsetFont
(E\234) show
n
57.3 353.133 m
(E\234) pdf_strokepath
57.3 373.173 m
(@\002) show
n
57.3 373.173 m
(@\002) pdf_strokepath
57.3 393.212 m
/N10 [0.0 19.98 -19.98 0.0 0.0 0.0] Tf
( \(\260\))
[4.98101 6.6472 7.98588 6.6472 ] pdfys
101.64 430.833 m
%ADOBeginSubsetFont: KHTBAA+NSimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
/KHTBAA+NSimSun 1 GetGlyphDirectory
16372 <001C60D8A8C9B5EE310D75AF29CBB3581903C8D92E8942FBDDCAC9900
B98BE2A424998ABEC1D9196DFA112E2A4307349EB35DCA6D5F80B61F08743C64
83E6612209FC305A58764B606E13839907344746B62C7689E4DC44B64149D72B
0B9D5A788C0ED410364C346082C79C8E15C8FF96341F64E0BB994132D652FEA3
72A1B30D2D27EE1BF0885595A9D76D2781DAD961CA80A48EB597B76605A1B96D
2A9710B86AE4A9C602B35C062D3B931927EDEB55D34D1829D6AA7A7A741A03B0
FD5BAF9831E7D81CD4AB5F9FD3F2B6EFBC2CD3BC518EDD2261D666555A591A54
4A21485B0438EF3E9D031CBE47EE5EF26274F7AB8DEFE91B46CC2014F77CC99B
F9136B3A7A5AAAB157D68AF756679FCD778D337817F281EB1622D37B12025333
6FBDF3474C498332F5104954E04DA6AF8A75B14FB9D7D9E1A9785EFCC5846BE8
C25064AD207EF828A27F345EA4EFBF0AB0EF56F7ABFA49A485D1DC013D99E879
39E881FE8E7A3E24E2D34CB15> |
!
end
end end
%ADOEndSubsetFont
/N12 19.98 Tf
(?\364) show
n
101.64 430.833 m
(?\364) pdf_strokepath
121.74 430.833 m
%ADOBeginSubsetFont: KHTBAA+NSimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
/KHTBAA+NSimSun 1 GetGlyphDirectory
4554 <001C60D8A8C9B5EE310DE7B33CB67ACEA3ED59516A576BFAFAECE86FFE
BC6FCB8A5E38FE8DBCFF4EBBA5CA2DB165C63EFB99DFD80D73861D19A3E42F3E
F7F5D7598D234204EC344BB0DF80FCC9DD3CCDDB17539CAE0935F416201270E3
3DE4BE51821F9E0C5DDBB2AB73ADB1BF7FE2A16D747FAAB6F99E783312DDB99C
8615247A023BDD9FF6BE9AC2B7CAF5F1DCA8D7A1EC55C89BC649F0202521D51C
083B711526D99F5263ADE05AFCDCAE9608EC98D1D3B1BC2AE9390A2391B1F8D9
DF69B05FC59CF203E8FB65B077457B00364473EDAF9C4B99DAA0BB39292D597F
252605BDEFE92E98A160742142E94E5190B00FED8FE32B245AD4D363C65F3BDC
6C17CFC7DA21B4F3B81AFA46A9> |
!
end
end end
%ADOEndSubsetFont
(\021\312) show
n
121.74 430.833 m
(\021\312) pdf_strokepath
141.84 430.833 m
%ADOBeginSubsetFont: KHTBAA+NSimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
/KHTBAA+NSimSun 1 GetGlyphDirectory
11444 <001C60D8A8C9B5EE31023EA36A9FB9EFFD002A9633CA6905B9E0734B1
1E4E52251A0326518C1C981FE8C63A8F3DC4516C02BA51ACC50BA5493354F1DF
F0C24C89FD7AC2761BAA5B6E961F23A04C33C41ABCA793F439CB326241CBB7E2
D21A3DAAEC97999FF2B6B57992D6F610EC8E6CC1F8E5A049C3C988F648FADE33
2B67F933C49B6EDAFB049385022C67B87E016A3CF2DDFA887B7CB78999213827
C4E7201517BEDBD7F6F673AF05514295AC93B339E03F5039C4D90AF9A58E458A
E7375CFE482023AB71FE3DD9A4E735E460555322F0A291FED2E7E6241F302202
2E7690252931623BA8EF10ADA8633684AC3DAB8884CE84BED614E1A63D44FF85
1982F440FA12D2A72> |
!
end
end end
%ADOEndSubsetFont
(,\264) show
n
141.84 430.833 m
(,\264) pdf_strokepath
161.939 430.833 m
%ADOBeginSubsetFont: KHTBAA+NSimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
/KHTBAA+NSimSun 1 GetGlyphDirectory
16960 <001C60D8A8C9B5EE31034A54EC1A95736CFF2AF501CC5BF14075D19E8
89D7E7C6D04582146C1F9B44F903830AA617A806FEC22DCADF859A76B3675D2E
B79A933B7CDBD4272A5FD66508F3666933C1E1E0D65366ADBD3A87AB0DE3B7A2
4CF5B50FC8B4F645FE6012ECB7DC62E02C6B83F8C659DE8DD6059C40F7B584B5
1122D6B1D3AFE66B23AD6B1FECBE8844479D1FEEA73E8579356590A8989BCD64
7C80881415B8DBD4D1586866B99280CADBC23AF7AE8BD3BF5CD7E5DB4DC872F5
A7D9928DD3172D889270E414F80E395ED95F665869C952E19ABF6A7D383FCE75
5FE6D21F8939A1B7FB7E53623BDB14FD855E4969E410CFD832A820CA82F330AC
E6A83BB65776FEC18D6898E6AE219070F5FCAA35C30DCAC4F00CFFA831962B04
F23163B75FB8B222B94AC99F20B3EAA176BD5CEB4361402226EDE90B8D364702
6B514959ED7CB74397FFDBDF05D71DD69109690796221EA36039CBBF2F883575
FE21AF2FFD9B4A2E8AD02705C5FFC57E55F419D2B45902CB4A5690DBCE590C1D
6B158094BCA5F9C9B009A96869DBADC8CE6> |
!
end
end end
%ADOEndSubsetFont
(B@) show
n
161.939 430.833 m
(B@) pdf_strokepath
182.039 430.833 m
%ADOBeginSubsetFont: KHTBAA+NSimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
/KHTBAA+NSimSun 1 GetGlyphDirectory
8978 <001C60D8A8C9B5EE310356A83BCD5230C3A28117CEE2A742D1CAB46A07
84549235B467183BDEE736819C5DA87653A8AE30A2BC247997A6D7E284F912EE
185C5CF3DF703E34CA1D82A1624C400C45C3A63F1823F67E3FFC93C3F0D3F3BD
F9EEA034EE84AD9499FBC98C43D005E8FC3DC3F45C29A00613595CDF9058E0A4
193242952F1C81C0D2048BBEA3F212C9FC5D00F65AAE242AAEB9A5D8E9101972
FB0388A2A19D549C6BE47CBE72021F928C2FED4309A8510CBF63346968C9DFE8
D43EB02176DF46E4E4DB45C02B29E05B23366E55CEA4819C8485138A2D49E30A
1BCB4267A5244E5E8E1B978AC95AEC772E6547C3699793A3E675EBA4367FA56A
39D0FA8FD6E14B479D3FEE6743C3FDB620D24DD8DD9FE4C2A0A69E839C4BE24D
8F793FA98F6D728F7FF228E85E5FC7C6B9A522B4E9C28BAF8991A07647EE8519
27872C8BE24BAA2369F0A9397B75B1215FFD0A542D863062BD761DD8E00EB968
A9872C0D0109FD85E1631B9C016A4EBAE40251A2A2> |
!
end
end end
%ADOEndSubsetFont
(#\022) show
n
182.039 430.833 m
(#\022) pdf_strokepath
202.139 430.833 m
(\030\375) show
n
202.139 430.833 m
(\030\375) pdf_strokepath
222.239 430.833 m
(\030\203) show
n
222.239 430.833 m
(\030\203) pdf_strokepath
242.339 430.833 m
(@\002) show
n
242.339 430.833 m
(@\002) pdf_strokepath
262.439 430.833 m
(\n\274) show
n
262.439 430.833 m
(\n\274) pdf_strokepath
282.538 430.833 m
(\030\235) show
n
282.538 430.833 m
(\030\235) pdf_strokepath
302.638 430.833 m
(E\234) show
n
302.638 430.833 m
(E\234) pdf_strokepath
322.738 430.833 m
(@\002) show
n
322.738 430.833 m
(@\002) pdf_strokepath
342.841 430.833 m
/N10 19.98 Tf
(,) show
352.801 430.833 m
%ADOBeginSubsetFont: KHTBAA+NSimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
/KHTBAA+NSimSun 1 GetGlyphDirectory
3416 <001C60D8A8C9B5EE3154A7230CB053DBFD0532A751AB34F9DDBB53C504
48948CA80FCCB6D5C776EAAE1A2E16FDC581589C9E819D3514D2AA26AA4AA21B
B6A72EF0F5FC38196EBA39D2DECB41F9CEC0C25E5308BF7CADE1549832C100A2
0AB3FE3FD2E5D8EB03681E357E7709FAC208B4DE72AFB298A1C2AACB4BD01453
396EF976006FC6220F97CD34A3123125FAB6F7E2CE844CFD2AF326B9BF94B987
4DF04BA2BD720152936A8D33A4265390718E49C75C8677C513332E44212AD4DE
E82DF5D55557DE2428BE09> |
!
end
end end
%ADOEndSubsetFont
/N12 19.98 Tf
(\rX) show
n
352.801 430.833 m
(\rX) pdf_strokepath
372.9 430.833 m
%ADOBeginSubsetFont: KHTBAA+NSimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
/KHTBAA+NSimSun 1 GetGlyphDirectory
1085 <001C60D8A8C9B5EE3102F642D2929DD6D6A49011AC68F9130AED8B415E
C24C091FA198C8B57FD19CF21C5D58DBB34B3E003AB01A69BB4648A0A8629A1D
F3B530AE626B9B3FF54024BC15822872C343500FBEB87448BC9F0995C9CEA20C
17D3E737222DD89D098F47E2B76C0C36F054E02C73BECA4C87294C603B0E97E0
9C14EE70F0E97D90BF5B39C2E694DBB133F74BD5> |
!
end
end end
%ADOEndSubsetFont
(\004=) show
n
372.9 430.833 m
(\004=) pdf_strokepath
393.0 430.833 m
%ADOBeginSubsetFont: KHTBAA+NSimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
/KHTBAA+NSimSun 1 GetGlyphDirectory
2620 <001C60D8A8C9B5EE310DB639BBC38E34C67D1789E07D376AAA2BFEAEFE
EE6D7301AB2E3B08E4CC2EE58816C69EDD49484934432D1B1EB476B0B2743E4B
B9D152CEFCD0CBFEDBE9F44F601A37D4E0200244EA731484A672A2539149F8E2
F51AAA8D24335CAADFAD9F4D90DA5163F8CA6F20D85592AFA6248B63EB9C731F
B0359AABA0DA106DB12FF1365246DDE02D46C65E4A93F20345F8068D4B3A3D74
919BD844924FD3723554F9C7CE8E809DE514FD82C474D6DB079FE2F4EF7915> |
!
end
end end
%ADOEndSubsetFont
(\n<) show
n
393.0 430.833 m
(\n<) pdf_strokepath
413.1 430.833 m
(,\264) show
n
413.1 430.833 m
(,\264) pdf_strokepath
433.2 430.833 m
%ADOBeginSubsetFont: KHTBAA+NSimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
/KHTBAA+NSimSun 1 GetGlyphDirectory
7019 <001C60D8A8C9B5EE310DB27E62A8EE83056AD8FCA7B289C2DB78D982D4
F0F0B30F256B9DEE964E85824931BC437214B2201D94E5F9827CAA621363463B
5158EBC6DEA7689C4763E37AF17A015C89D060C477EBFDD530187DC097EAE521
6380F8D814899A2090B74EE4F228337AC4DF5EF08FAF3E56F4795BC21F1F274F
C20B283A450A3C388833A0FB1911493DD3926BDDD77FE9BB34BB808AD24BDC9D
3FDC288F12E2DC92B17DEE4A46BBDFA72EC307F09B48877369594FDA59550474
9957193D83925113ACDDAFBE8B467111> |
!
end
end end
%ADOEndSubsetFont
(\033k) show
n
433.2 430.833 m
(\033k) pdf_strokepath
453.3 430.833 m
(@\002) show
n
453.3 430.833 m
(@\002) pdf_strokepath
478.381 430.833 m
/N14 19.98 Tf
(\002) show
n
478.381 430.833 m
(\002) pdf_strokepath
491.04 420.873 m
/N10 15.96 Tf
(0) show
499.02 430.833 m
%ADOBeginSubsetFont: KHTBAA+NSimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
/KHTBAA+NSimSun 1 GetGlyphDirectory
1083 <001C60D8A8C9B5EE310E273180AD5223E4785CA449135A3A1FFBE2009A
017CF856FBC352F03D6C2F1554041CD15362E9B2515B818DAC9DA4F9EFA2677A
536F96FB50DCC7A3AE2CB4CFEA3FD9B1D56590F3051881150D28920C049B4F78> |
!
end
end end
%ADOEndSubsetFont
/N12 19.98 Tf
(\004;) show
n
499.02 430.833 m
(\004;) pdf_strokepath
519.12 430.833 m
(,\264) show
n
519.12 430.833 m
(,\264) pdf_strokepath
539.22 430.833 m
%ADOBeginSubsetFont: KHTBAA+NSimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
/KHTBAA+NSimSun 1 GetGlyphDirectory
19563 <001C60D8A8C9B5EE310DEF4E476E6DF693EC67B5A1A9BDA61C1B965E5
D268039EB710D7EC74D9BE04376B3BAA3E3D8D15DC1EAAAC1FC6F9419C2746B0
10A96880C2B48C94E6C230085BAF32CBD8891593C8374EB17D755016235D8BE2
73884E34C9583B25585DD00F16E8FB765B9B9EF093C43211AAA132695158F403
69B039D3E1EB12EAABFB66BB5CFF19D6FF77AE4002417CC9B209C7875D9A33AB
6C23237762838171C213FAD750B9808B22702C2F51166BA3869146310C7CBB22
9B0E57A8535535D5F1BF0485F8A3E365AADB940C24CB51DD4E74040B6E927FAD
B4138EE6BA588411BFB16BC11508EE46D> |
!
end
end end
%ADOEndSubsetFont
(Lk) show
n
539.22 430.833 m
(Lk) pdf_strokepath
559.319 430.833 m
%ADOBeginSubsetFont: KHTBAA+NSimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
/KHTBAA+NSimSun 1 GetGlyphDirectory
4716 <001C60D8A8C9B5EE310371EFBEA1530D288F51D388AE9E85BB67B880F9
7E19C9EF08DF1274A67613A7B1A51C93DE7AEBCD89C9B66D4454CFC096EFF9FF
E484884E61988212D3EE0DD4B5760B1267DB02DC39059E61F357E6F4CC2E7A3B
6193A715803EB0F5BEFDFBB736DE0FDFB2ADA59ADF88B27F2399318FE158F922
BD81B7D481A433CE37D76E083312CB46922FD8489FF5FE5F6F66B8DD32BB55F8
2E4ECB40956941102EBB8EB9B427F8F251D36A80DDFF4126B53C33982BED740A
715C880B46EEF55724603A40F3B5D91F085973E08A9164> |
!
end
end end
%ADOEndSubsetFont
(\022l) show
n
559.319 430.833 m
(\022l) pdf_strokepath
579.419 430.833 m
%ADOBeginSubsetFont: KHTBAA+NSimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
/KHTBAA+NSimSun 1 GetGlyphDirectory
2251 <001C60D8A8C9B5EE3102FB3B0DB1F2ED712BF3FFEBDCE41513CC27A541
FD1CBA0B86F78FEE4C4758DA5063CAED6E3F39085869B4242A59FC6847FFA8B9
A324A3201AF4A15ABAF41D5D5CA6EF936D05196DBF69A96E72044492CC1E8DD2
0F2258FC736BFD269EC120D9C6CBDF2AEA6DA441592F09BD647B1CEBC5EE6341
6901E63FFC61ABF693D97D13275C88FEB4AF53D051AE092E445FB225B23AA163
0E2FA81794B021CB12> |
!
end
end end
%ADOEndSubsetFont
(\b\313) show
n
579.419 430.833 m
(\b\313) pdf_strokepath
599.519 430.833 m
%ADOBeginSubsetFont: KHTBAA+NSimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
/KHTBAA+NSimSun 1 GetGlyphDirectory
19647 <001C60D8A8C9B5EE310226F9CCAB17403EE09F06744FCC455CBB663F1
2C8692675F095CC7464BF9FC6BF2E8CA53D5C74EA29573DA02F1CA33C73E2AAE
56B5416B8A508B0EBDACEF14750B6191F2DC955384D0EF2ABF4DA2E5465EC4CE
615D54EB7D2EAD6B30B7F1DAF11121EBE7D64B62F0664A4D9F2D5EEC54C79327
956B8BB1E317D57897FEF87FB6F0815FA914C4C475E0003D28B3B5FA3AA1CF80
E895D7805C07998D376290F4E4F6F19E8D6D14E8A2827A7ABAC58B78B2915A30
1E0BC08E7ED3065558BA4FA4974EFA003DF57B2EB182D74B72018B5A04499B2D
70BD00F3B77E08C1A86424BEC99C9B08D54C3A1AFA0BB5D3D0947603970C1B1C
9C401AE0FC2F53D9CFC76ADA427CB5E639D26F4B676FFEA18A10F664415F3285
1093AE9ED153A3726EF35694620BFA800DAA4987B50885324901E329791C4117
E5420F757C7D548D169C54DF483BB80DFD6AB97702DD9E95C8237758C55B2D7C
B0E37ECD8228E0277320F80AECBB859F3A580017A13BB078AC2D9D6023EB0AAF
8D18E2550E79E8DA7310AF6653D032A3B6DC66695EA73E191FBB735CDB95FD2F
C4C3A57AEB5A1322DFC14B32F8B56904E79E846E1FCF5B7B7> |
!
end
end end
%ADOEndSubsetFont
(L\277) show
n
599.519 430.833 m
(L\277) pdf_strokepath
619.619 430.833 m
%ADOBeginSubsetFont: KHTBAA+NSimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
/KHTBAA+NSimSun 1 GetGlyphDirectory
7184 <001C60D8A8C9B5EE314491412C4F98C01B311B88926938D839269968A3
DC85496F37CA788E0CAE119AB4D0A309A0C5418A82AE11D784259B36E5E727D2
890CCDC9D6C9C3055E56D81127B20B0B5FA4E587A99AA54B0BA2F4F05380E1D2
F90A4CCC4DC90C08F6A200D3A54B2C06B0728BEB24C5ABBDCCC0B2AB8F6F129D
0D09BA733230FECC4AF4D587E96D66D22D1D2045EA70EE41F464B8F03200FC1F
8F87F5AB6B9A1FC6A5FAA3B8A1C0C08A> |
!
end
end end
%ADOEndSubsetFont
(\034\020) show
n
619.619 430.833 m
(\034\020) pdf_strokepath
639.719 430.833 m
%ADOBeginSubsetFont: KHTBAA+NSimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
/KHTBAA+NSimSun 1 GetGlyphDirectory
18431 <001C60D8A8C9B5EE31025C74B0D5FCB185BB18CF829F32D3C7568CCE2
0A02880D51DD5D883B57DDBD038DA04B492BBD57BC63F41D2B2608E993CC32E5
12ABDC46286C0B79B433387CEE344842678090D6881157430F0570241337E09A
59E3691A702DD3F61F815AEBC36E6856303F7E403DFECD265873A94AACF3729A
E890CD8EAE452944018156E1903BAC24610E7E1897C7570082E36867D3E0CD35
4614A9AC8CB3D99B70CD1F2FBB467D6122567D15AEB10DD977BB2FA4EEAAB47B
75B26BC6E6DE79C5D29EB6E5AF8DE52E2191AF2C5F4AD2A5E44F83805D077493
2F733D095453CFE7D2CAFF1E18A88671F724373F9E1073114F947AD621624477
C2AB1831916A32371F98C39FB629E4EEA241FC2> |
!
end
end end
%ADOEndSubsetFont
(G\377) show
n
639.719 430.833 m
(G\377) pdf_strokepath
659.818 430.833 m
%ADOBeginSubsetFont: KHTBAA+NSimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
/KHTBAA+NSimSun 1 GetGlyphDirectory
13538 <001C60D8A8C9B5EE31027C6F1595F8A963D1ED45698EFD8D774CE1A3A
3A63906A330E71B37931D51FACF824640358001F09EA72DA83CF5B38A1EDA697
A36FB95A58F1EDDBA25E5138D0B124313023D7BEFEA2D2128DD7666AA8EE5AC5
CFC4AAC4A3E4036B7A691B8C8A001BF19383C890471845B4DF51FC0133F71C1D
E924895FBB8A869C4D1529C0317A461F35A7935ED0F95D181D2141B44AB46482
08BC967E73E07BEB90C2010E335276D8AD393B0326D418B834E41C09E46C9B62
A0D082FFF88ABFEAFF29E2DADA85B159D162C44042EC61C8423BD15B8C00B5CC
1A694F1192E82809B40CED81F0FCC2263664AE5926D7FCC22AAC91835B6BC5ED
CD15583F23D8D541ABD5EF1A4FD07CC01CC756752F9B5E8E4DDBAFDDB724AB95
3329B0CBDC138C5074A65559FF584C2824720969E0AB896FD3214B76383A7> |
!
end
end end
%ADOEndSubsetFont
(4\342) show
n
659.818 430.833 m
(4\342) pdf_strokepath
679.918 430.833 m
%ADOBeginSubsetFont: KHTBAA+NSimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
/KHTBAA+NSimSun 1 GetGlyphDirectory
7206 <001C60D8A8C9B5EE31023610EA24DA89407F2213CF3B357B7DDFF7767F
1140222B0F65E787D654FD6F7AB59131929977C68AF96FD20CCC7817BA511076
75AD863E2CD96380DFF244754C96726F9228FAE9BF20DCCB74AB20D36042F21D
52ED076954EEECD996C1C78FEF9DAEF6A2AD799915E8225C75C6A67CDC59DC53
02BF1405E3846ED20EDBD1FC82F76FEE6126F1EC0DACA47EA4B019EE60C568B7
9E5D3BF9E2490B99309868FD67125D3B1FAB1B2A2D4484AB465BC5B66AECEA2D
EF2648D22E330E8577BE2C92A71BED763D05571AA5A9AA0FAFE123> |
!
end
end end
%ADOEndSubsetFont
(\034&) show
n
679.918 430.833 m
(\034&) pdf_strokepath
700.018 430.833 m
%ADOBeginSubsetFont: KHTBAA+NSimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
/KHTBAA+NSimSun 1 GetGlyphDirectory
19492 <001C60D8A8C9B5EE31022ACC8A40772039B635EB53085DE5A206756EB
56363E2BB5817E71FC65F505377D53101CB43EFF53BC7122F10C1491C26D6935
B2E50FF9D8B7C318246679C7167B26D12B2C6C71B6141DB588518C89FFBF8C2F
839FD737DC7EF47B54E7C179D10AD796204D56112FB7D8DD16C99431522354D6
1F1760CE6EA2F8A29FEEA6F51B0B84B11D060EF44C73F581F95A0637E0DFF943
BAE4E1F007709BCBD41E40DAEF44291226EAF96069BD3F2C3B3CA6CA0D678FF1
6F5499F8FD8EA62DA6AFECA1D503EF90EC2D7EC91313AFFF52E9A46437B356B3
29D6F6C5DEAF3BD85E90A114343E9E2DF05> |
!
end
end end
%ADOEndSubsetFont
(L$) show
n
700.018 430.833 m
(L$) pdf_strokepath
720.118 430.833 m
(,\264) show
n
720.118 430.833 m
(,\264) pdf_strokepath
740.218 430.833 m
%ADOBeginSubsetFont: KHTBAA+NSimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
/KHTBAA+NSimSun 1 GetGlyphDirectory
2568 <001C60D8A8C9B5EE3102FF05A23F0FFA136BD61F574160279393DDB054
FB3D301567A26624F8D9553438DEB259A7F6D8EA5A9693A2A846027267F4C36C
6CBC6FFA9D3F5FCBC6F86CEAA107A4DA741E4755ED2E243EC7811FD33F415435
2DFFB0B090E5E5312C3BF51551F3D1B9F0399E60B83EE5F2FC769D88E9B21E4C
144405B71FB42ADD2BAA528C504891DFADF6F49B3BB99CD98889B25947DF2B2A
61788B47BDCB605921911CBF755355854E52A8ECF4E910C04101AB1B604A4B5C
C389D0726C75BE2C62CE76042AF580FA98403A94221A6DB910227C989BBF2CD7
881CE7F55DFC062C965230C6B7BC90A609C1C4C6A20D13762B7F8B96D08D1870
7685FF8BAF44F4> |
!
end
end end
%ADOEndSubsetFont
(\n\b) show
n
740.218 430.833 m
(\n\b) pdf_strokepath
760.318 430.833 m
%ADOBeginSubsetFont: KHTBAA+NSimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
/KHTBAA+NSimSun 1 GetGlyphDirectory
2374 <001C60D8A8C9B5EE310DA694D3C11189146C2177303D62F4B6B10D2EAC
9F2A780662F647CAE34FE7D36BC11417FEC5660A5D869AB9A11F20ABF3846399
722BA9465C45046AF72E007A9E0289673F15C09606E5271191B6C3D21F1C1495
7902F32884498A0C1C45097680C1A99FEC2F8294855520ABEC608BEE593B79B0
429B0D672510ADA2DAB74DBA259973B1A826B4AA31FA9B8E16DD64B48BB59B46
32A054DD981456B4098B657D154124E7BD5F9F420689CCF809FA2838EE0707B0
A6BEE413957AB889D7B2726BE0EA68F5> |
!
end
end end
%ADOEndSubsetFont
(\tF) show
n
760.318 430.833 m
(\tF) pdf_strokepath
n
1.0 sc
714.239990 347.673004 65.580017 39.299988 rectfill

1 j
1.5 w
10.0 M
n
714.24 347.673 m
714.24 386.973 l
779.82 386.973 l
779.82 347.673 l
714.24 347.673 l
714.24 386.973 m
779.82 386.973 l
S
n
779.820007 386.912994 0.060059 0.059998 rectfill

n
714.24 347.673 m
779.82 347.673 l
S
n
779.820007 347.613007 0.060059 0.059998 rectfill

n
779.82 347.673 m
779.82 386.973 l
S
n
779.820007 386.912994 0.060059 0.059998 rectfill

n
714.24 347.673 m
714.24 386.973 l
S
n
714.239990 386.912994 0.059937 0.059998 rectfill

n
714.24 347.673 m
779.82 347.673 l
S
n
779.820007 347.613007 0.060059 0.059998 rectfill

n
714.24 347.673 m
714.24 386.973 l
S
n
714.239990 386.912994 0.059937 0.059998 rectfill

n
714.24 386.973 m
779.82 386.973 l
S
n
779.820007 386.912994 0.060059 0.059998 rectfill

n
714.24 347.673 m
779.82 347.673 l
S
n
779.820007 347.613007 0.060059 0.059998 rectfill

n
779.82 347.673 m
779.82 386.973 l
S
n
779.820007 386.912994 0.060059 0.059998 rectfill

n
714.24 347.673 m
714.24 386.973 l
S
n
714.239990 386.912994 0.059937 0.059998 rectfill

0 j
0.819 w
1.0 M
0.0 sc
753.3 370.773 m
/N14 [13.98 0.0 4.7813 13.98 0.0 0.0] Tf
(\003) show
n
753.3 370.773 m
(\003) pdf_strokepath
760.62 370.773 m
/N17 13.98 Tf
(\(t\))
[4.65524 3.88644 4.65524 ] pdfxs
1 j
1.98 w
10.0 M
n
720.18 376.293 m
750.18 376.293 l
/E2 /ColorSpace findRes cs 1.0 0.0 0.0 sc
S
0 j
0.819 w
1.0 M
[/DeviceGray] cs 0.0 sc
753.3 352.893 m
/N14 [13.98 0.0 4.7813 13.98 0.0 0.0] Tf
(\002) show
n
753.3 352.893 m
(\002) pdf_strokepath
762.18 352.893 m
/N17 13.98 Tf
(\(t\))
[4.65524 3.88644 4.65524 ] pdfxs
1 j
1.98 w
10.0 M
n
720.18 358.413 m
750.18 358.413 l
/E2 /ColorSpace findRes cs 0.0 1.0 0.0 sc
S
n
[/DeviceGray] cs 1.0 sc
94.800003 111.333000 692.640015 150.779999 rectfill

1.5 w
n
94.8 111.333 m
94.8 262.113 l
787.44 262.113 l
787.44 111.333 l
94.8 111.333 l
S
n
94.8 262.113 m
787.44 262.113 l
0.0 sc
S
n
787.47 262.053 m
787.47 262.113 l
0.0600586 w
S
1.5 w
n
94.8 111.333 m
787.44 111.333 l
S
n
787.47 111.273 m
787.47 111.333 l
0.0600586 w
S
1.5 w
n
787.44 111.333 m
787.44 262.113 l
S
n
787.47 262.053 m
787.47 262.113 l
0.0600586 w
S
1.5 w
n
94.8 111.333 m
94.8 262.113 l
S
n
94.83 262.053 m
94.83 262.113 l
0.0599976 w
S
1.5 w
n
94.8 111.333 m
787.44 111.333 l
S
n
787.47 111.273 m
787.47 111.333 l
0.0600586 w
S
1.5 w
n
94.8 111.333 m
94.8 262.113 l
S
n
94.83 262.053 m
94.83 262.113 l
0.0599976 w
S
1.5 w
n
94.8 111.333 m
94.8 118.293 l
S
n
94.83 118.233 m
94.83 118.293 l
0.0599976 w
S
1.5 w
n
94.8 262.113 m
94.8 255.213 l
S
n
94.83 255.153 m
94.83 255.213 l
0.0599976 w
S
1.5 w
91.32 95.6726 m
/N10 13.98 Tf
(0) show
n
164.04 111.333 m
164.04 118.293 l
S
n
164.07 118.233 m
164.07 118.293 l
0.0599976 w
S
1.5 w
n
164.04 262.113 m
164.04 255.213 l
S
n
164.07 255.153 m
164.07 255.213 l
0.0599976 w
S
1.5 w
151.8 95.6726 m
(0.05)
[6.99 3.495 6.99 6.99 ] pdfxs
n
233.28 111.333 m
233.28 118.293 l
S
n
233.31 118.233 m
233.31 118.293 l
0.0599976 w
S
1.5 w
n
233.28 262.113 m
233.28 255.213 l
S
n
233.31 255.153 m
233.31 255.213 l
0.0599976 w
S
1.5 w
224.52 95.6726 m
(0.1)
[6.99 3.495 6.99 ] pdfxs
n
302.58 111.333 m
302.58 118.293 l
S
n
302.61 118.233 m
302.61 118.293 l
0.0599976 w
S
1.5 w
n
302.58 262.113 m
302.58 255.213 l
S
n
302.61 255.153 m
302.61 255.213 l
0.0599976 w
S
1.5 w
290.34 95.6726 m
(0.15)
[6.99 3.495 6.99 6.99 ] pdfxs
n
371.82 111.333 m
371.82 118.293 l
S
n
371.85 118.233 m
371.85 118.293 l
0.0600281 w
S
1.5 w
n
371.82 262.113 m
371.82 255.213 l
S
n
371.85 255.153 m
371.85 255.213 l
0.0600281 w
S
1.5 w
363.06 95.6726 m
(0.2)
[6.99 3.495 6.99 ] pdfxs
n
441.12 111.333 m
441.12 118.293 l
S
n
441.15 118.233 m
441.15 118.293 l
0.0599976 w
S
1.5 w
n
441.12 262.113 m
441.12 255.213 l
S
n
441.15 255.153 m
441.15 255.213 l
0.0599976 w
S
1.5 w
428.88 95.6726 m
(0.25)
[6.99 3.495 6.99 6.99 ] pdfxs
n
510.36 111.333 m
510.36 118.293 l
S
n
510.39 118.233 m
510.39 118.293 l
0.0600281 w
S
1.5 w
n
510.36 262.113 m
510.36 255.213 l
S
n
510.39 255.153 m
510.39 255.213 l
0.0600281 w
S
1.5 w
501.6 95.6726 m
(0.3)
[6.99 3.495 6.99 ] pdfxs
n
579.6 111.333 m
579.6 118.293 l
S
n
579.63 118.233 m
579.63 118.293 l
0.0599976 w
S
1.5 w
n
579.6 262.113 m
579.6 255.213 l
S
n
579.63 255.153 m
579.63 255.213 l
0.0599976 w
S
1.5 w
567.36 95.6726 m
(0.35)
[6.99 3.495 6.99 6.99 ] pdfxs
n
648.9 111.333 m
648.9 118.293 l
S
n
648.93 118.233 m
648.93 118.293 l
0.0599976 w
S
1.5 w
n
648.9 262.113 m
648.9 255.213 l
S
n
648.93 255.153 m
648.93 255.213 l
0.0599976 w
S
1.5 w
640.14 95.6726 m
(0.4)
[6.99 3.495 6.99 ] pdfxs
n
718.14 111.333 m
718.14 118.293 l
S
n
718.17 118.233 m
718.17 118.293 l
0.0599365 w
S
1.5 w
n
718.14 262.113 m
718.14 255.213 l
S
n
718.17 255.153 m
718.17 255.213 l
0.0599365 w
S
1.5 w
705.9 95.6726 m
(0.45)
[6.99 3.495 6.99 6.99 ] pdfxs
n
787.44 111.333 m
787.44 118.293 l
S
n
787.47 118.233 m
787.47 118.293 l
0.0600586 w
S
1.5 w
n
787.44 262.113 m
787.44 255.213 l
S
n
787.47 255.153 m
787.47 255.213 l
0.0600586 w
S
1.5 w
778.68 95.6726 m
(0.5)
[6.99 3.495 6.99 ] pdfxs
n
94.8 111.333 m
101.7 111.333 l
S
n
101.73 111.273 m
101.73 111.333 l
0.0599976 w
S
1.5 w
n
787.44 111.333 m
780.48 111.333 l
S
n
780.51 111.273 m
780.51 111.333 l
0.0599976 w
S
1.5 w
84.9 106.233 m
(0) show
n
94.8 138.753 m
101.7 138.753 l
S
n
101.73 138.693 m
101.73 138.753 l
0.0599976 w
S
1.5 w
n
787.44 138.753 m
780.48 138.753 l
S
n
780.51 138.693 m
780.51 138.753 l
0.0599976 w
S
1.5 w
74.4 133.653 m
(0.2)
[6.99 3.495 6.99 ] pdfxs
n
94.8 166.173 m
101.7 166.173 l
S
n
101.73 166.113 m
101.73 166.173 l
0.0599976 w
S
1.5 w
n
787.44 166.173 m
780.48 166.173 l
S
n
780.51 166.113 m
780.51 166.173 l
0.0599976 w
S
1.5 w
74.4 161.073 m
(0.4)
[6.99 3.495 6.99 ] pdfxs
n
94.8 193.593 m
101.7 193.593 l
S
n
101.73 193.533 m
101.73 193.593 l
0.0599976 w
S
1.5 w
n
787.44 193.593 m
780.48 193.593 l
S
n
780.51 193.533 m
780.51 193.593 l
0.0599976 w
S
1.5 w
74.4 188.493 m
(0.6)
[6.99 3.495 6.99 ] pdfxs
n
94.8 221.013 m
101.7 221.013 l
S
n
101.73 220.953 m
101.73 221.013 l
0.0599976 w
S
1.5 w
n
787.44 221.013 m
780.48 221.013 l
S
n
780.51 220.953 m
780.51 221.013 l
0.0599976 w
S
1.5 w
74.4 215.913 m
(0.8)
[6.99 3.495 6.99 ] pdfxs
n
94.8 248.433 m
101.7 248.433 l
S
n
101.73 248.373 m
101.73 248.433 l
0.0599976 w
S
1.5 w
n
787.44 248.433 m
780.48 248.433 l
S
n
780.51 248.373 m
780.51 248.433 l
0.0599976 w
S
1.5 w
84.9 243.333 m
(1) show
n
94.8 262.113 m
787.44 262.113 l
S
n
787.47 262.053 m
787.47 262.113 l
0.0600586 w
S
1.5 w
n
94.8 111.333 m
787.44 111.333 l
S
n
787.47 111.273 m
787.47 111.333 l
0.0600586 w
S
1.5 w
n
787.44 111.333 m
787.44 262.113 l
S
n
787.47 262.053 m
787.47 262.113 l
0.0600586 w
S
1.5 w
n
94.8 111.333 m
94.8 262.113 l
S
n
94.83 262.053 m
94.83 262.113 l
0.0599976 w
S
1.5 w
q
n
94.8 111.273 443.16 138.24 re
W
n
1.98 w
n
94.8 111.333 m
133.94 111.338 169.263 127.051 202.68 146.013 c
240.287 167.483 275.628 192.732 314.04 212.853 c
389.107 252.617 457.379 261.161 536.82 227.733 c
S
Q
q
n
535.74 111.273 251.76 117.54 re
W
n
1.98 w
n
536.82 227.733 m
581.395 209.042 620.988 181.231 662.1 156.273 c
700.324 133.12 741.58 111.283 787.44 111.333 c
S
Q
q
n
94.8 111.273 443.16 138.24 re
W
n
1.98 w
n
94.8 111.333 m
134.358 111.307 170.032 130.622 202.68 151.053 c
239.495 174.177 274.563 199.697 314.04 218.373 c
385.457 252.844 461.936 258.33 536.82 231.513 c
/E2 /ColorSpace findRes cs 0.0 1.0 0.0 sc
S
Q
q
n
535.74 111.273 251.76 121.32 re
W
n
1.98 w
n
536.82 231.513 m
582.487 215.161 621.875 188.578 662.1 162.153 c
699.822 137.871 740.922 111.313 787.44 111.333 c
/E2 /ColorSpace findRes cs 0.0 1.0 0.0 sc
S
Q
q
n
94.8 111.273 443.16 138.24 re
W
n
1.98 w
n
94.8 111.333 m
135.782 111.574 170.576 136.725 202.68 159.333 c
238.207 185.003 272.839 210.76 314.04 226.833 c
349.499 240.971 387.405 246.868 425.4 248.193 c
462.494 249.322 500.865 246.645 536.82 237.093 c
/E2 /ColorSpace findRes cs 1.0 0.0 0.0 sc
S
Q
q
n
535.74 111.273 251.76 126.9 re
W
n
1.98 w
n
536.82 237.093 m
584.263 224.896 622.921 200.33 662.1 171.873 c
699.51 145.759 739.386 111.775 787.44 111.333 c
/E2 /ColorSpace findRes cs 1.0 0.0 0.0 sc
S
Q
q
n
94.8 111.273 443.16 138.24 re
W
n
1.98 w
n
94.8 111.333 m
135.779 111.199 173.139 148.59 202.68 173.133 c
236.397 202.221 270.046 228.194 314.04 239.313 c
349.877 248.643 388.576 248.102 425.4 248.433 c
462.197 248.182 500.281 249.378 536.82 245.133 c
/E2 /ColorSpace findRes cs 0.0 0.0 1.0 sc
S
Q
q
n
535.74 111.273 251.76 134.94 re
W
n
1.98 w
n
536.82 245.133 m
587.528 239.328 623.043 219.733 662.1 187.773 c
683.072 170.723 702.862 151.978 724.74 136.113 c
743.283 122.808 764.004 111.382 787.44 111.333 c
/E2 /ColorSpace findRes cs 0.0 0.0 1.0 sc
S
Q
q
n
94.8 111.273 443.16 146.64 re
W
n
1.98 w
n
94.8 111.333 m
115.122 111.436 132.511 124.065 147.0 137.073 c
166.94 155.409 184.052 176.662 202.68 196.293 c
234.713 230.194 265.503 255.305 314.04 256.713 c
332.667 257.386 351.233 255.215 369.72 253.233 c
388.226 251.134 406.783 249.369 425.4 248.673 c
462.712 247.019 499.784 252.035 536.82 255.693 c
/E2 /ColorSpace findRes cs 1.0 0.0 1.0 sc
S
Q
q
n
535.74 111.273 251.76 146.64 re
W
n
1.98 w
n
536.82 255.693 m
590.218 260.573 622.338 250.929 662.1 213.753 c
684.395 192.892 703.333 168.842 724.74 147.153 c
741.269 130.579 762.561 111.417 787.44 111.333 c
/E2 /ColorSpace findRes cs 1.0 0.0 1.0 sc
S
Q
q
n
94.8 111.273 443.64 138.72 re
W
n
3.0 w
[3.0 3.0 ] 0.0 d
n
94.8 111.333 m
98.28 113.553 l
101.76 115.713 l
105.24 117.873 l
108.72 120.033 l
112.2 122.193 l
115.68 124.353 l
119.16 126.453 l
122.64 128.613 l
126.12 130.773 l
129.6 132.933 l
133.08 135.033 l
136.56 137.193 l
140.04 139.293 l
143.52 141.393 l
147.0 143.493 l
150.48 145.593 l
153.96 147.693 l
157.44 149.793 l
160.92 151.893 l
164.4 153.933 l
167.88 155.973 l
171.36 158.013 l
174.84 160.053 l
178.32 162.093 l
181.8 164.073 l
185.28 166.053 l
188.76 168.033 l
192.24 170.013 l
195.72 171.933 l
199.2 173.913 l
202.68 175.773 l
206.16 177.693 l
209.64 179.613 l
213.12 181.473 l
216.6 183.333 l
220.08 185.133 l
223.56 186.933 l
227.04 188.733 l
230.52 190.533 l
234.0 192.273 l
237.48 194.013 l
240.96 195.753 l
244.44 197.433 l
247.92 199.113 l
251.4 200.733 l
254.88 202.413 l
258.36 203.973 l
261.84 205.593 l
265.32 207.153 l
268.8 208.653 l
272.28 210.213 l
275.76 211.653 l
279.24 213.153 l
282.72 214.593 l
286.2 215.973 l
289.68 217.353 l
293.16 218.733 l
296.64 220.053 l
300.12 221.373 l
303.6 222.633 l
307.08 223.893 l
310.56 225.093 l
314.04 226.293 l
317.52 227.493 l
321.0 228.633 l
324.48 229.713 l
327.96 230.793 l
331.44 231.813 l
334.92 232.833 l
338.4 233.853 l
341.88 234.813 l
345.36 235.713 l
348.84 236.613 l
352.32 237.453 l
355.8 238.293 l
359.28 239.133 l
362.76 239.853 l
366.24 240.633 l
369.72 241.353 l
373.2 242.013 l
376.68 242.613 l
380.16 243.213 l
383.64 243.813 l
387.12 244.353 l
390.6 244.893 l
394.08 245.313 l
397.56 245.793 l
401.04 246.213 l
404.52 246.573 l
408.0 246.873 l
411.48 247.233 l
414.96 247.473 l
418.44 247.713 l
421.92 247.953 l
425.4 248.073 l
428.88 248.253 l
432.36 248.313 l
435.84 248.373 l
439.32 248.433 l
442.86 248.433 l
446.34 248.373 l
449.82 248.313 l
453.3 248.253 l
456.78 248.073 l
460.26 247.953 l
463.74 247.713 l
467.22 247.473 l
470.7 247.233 l
474.18 246.873 l
477.66 246.573 l
481.14 246.213 l
484.62 245.793 l
488.1 245.313 l
491.58 244.893 l
495.06 244.353 l
498.54 243.813 l
502.02 243.213 l
505.5 242.613 l
508.98 242.013 l
512.46 241.353 l
515.94 240.633 l
519.42 239.853 l
522.9 239.133 l
526.38 238.293 l
529.86 237.453 l
533.34 236.613 l
536.82 235.713 l
/E2 /ColorSpace findRes cs 0.0 1.0 1.0 sc
S
Q
q
n
535.26 111.273 252.24 126.0 re
W
n
3.0 w
[3.0 3.0 ] 0.0 d
n
536.82 235.713 m
540.3 234.813 l
543.78 233.853 l
547.26 232.833 l
550.74 231.813 l
554.22 230.793 l
557.7 229.713 l
561.18 228.633 l
564.66 227.493 l
568.14 226.293 l
571.62 225.093 l
575.1 223.893 l
578.58 222.633 l
582.06 221.373 l
585.54 220.053 l
589.02 218.733 l
592.5 217.353 l
595.98 215.973 l
599.46 214.593 l
602.94 213.153 l
606.42 211.653 l
609.9 210.213 l
613.38 208.653 l
616.86 207.153 l
620.34 205.593 l
623.82 203.973 l
627.3 202.413 l
630.78 200.733 l
634.26 199.113 l
637.74 197.433 l
641.22 195.753 l
644.7 194.013 l
648.18 192.273 l
651.66 190.533 l
655.14 188.733 l
658.62 186.933 l
662.1 185.133 l
665.58 183.333 l
669.06 181.473 l
672.54 179.613 l
676.02 177.693 l
679.5 175.773 l
682.98 173.913 l
686.46 171.933 l
689.94 170.013 l
693.42 168.033 l
696.9 166.053 l
700.38 164.073 l
703.86 162.093 l
707.34 160.053 l
710.82 158.013 l
714.3 155.973 l
717.78 153.933 l
721.26 151.893 l
724.74 149.793 l
728.22 147.693 l
731.7 145.593 l
735.18 143.493 l
738.66 141.393 l
742.14 139.293 l
745.62 137.193 l
749.1 135.033 l
752.58 132.933 l
756.06 130.773 l
759.54 128.613 l
763.02 126.453 l
766.5 124.353 l
769.98 122.193 l
773.46 120.033 l
776.94 117.873 l
780.42 115.713 l
783.9 113.553 l
787.44 111.333 l
/E2 /ColorSpace findRes cs 0.0 1.0 1.0 sc
S
Q
0 j
0.799 w
1.0 M
390.78 75.4526 m
/N12 19.98 Tf
(\034\020) show
n
390.78 75.4526 m
(\034\020) pdf_strokepath
410.88 75.4526 m
(G\377) show
n
410.88 75.4526 m
(G\377) pdf_strokepath
430.98 75.4526 m
(4\342) show
n
430.98 75.4526 m
(4\342) pdf_strokepath
451.079 75.4526 m
(\034&) show
n
451.079 75.4526 m
(\034&) pdf_strokepath
471.179 75.4526 m
(L$) show
n
471.179 75.4526 m
(L$) pdf_strokepath
56.4 161.073 m
/N10 [0.0 19.98 -19.98 0.0 0.0 0.0] Tf
(F) show
66.36 173.253 m
/N10 [0.0 15.96 -15.96 0.0 0.0 0.0] Tf
(damp)
[8.88812 7.99436 13.3089 8.88812 ] pdfys
/E2 /ColorSpace findRes cs 0.0 0.0 1.0 sc
128.22 186.753 m
/N14 [12.0 0.0 4.1041 12.0 0.0 0.0] Tf
(\002) show
135.78 180.753 m
/N22 9.0 Tf
(0) show
140.76 186.753 m
/N22 12.0 Tf
(=35)
[7.008 6.672 6.672 ] pdfxs
161.1 192.753 m
/N14 [9.0 0.0 3.0781 9.0 0.0 0.0] Tf
(\260) show
1 j
0.96 w
10.0 M
n
288.18 171.273 m
248.58 190.173 l
1.0 0.0 0.0 sc
S
288.12 169.953 m
/N14 [12.0 0.0 4.1041 12.0 0.0 0.0] Tf
(\002) show
295.68 163.953 m
/N22 9.0 Tf
(0) show
300.66 169.953 m
/N22 12.0 Tf
(=45)
[7.008 6.672 6.672 ] pdfxs
321.0 175.953 m
/N14 [9.0 0.0 3.0781 9.0 0.0 0.0] Tf
(\260) show
[/DeviceGray] cs 0.0 sc
603.72 136.113 m
/N14 [12.0 0.0 4.1041 12.0 0.0 0.0] Tf
(\002) show
611.28 130.113 m
/N22 9.0 Tf
(0) show
616.26 136.113 m
/N22 12.0 Tf
(=65)
[7.008 6.672 6.672 ] pdfxs
636.6 142.113 m
/N14 [9.0 0.0 3.0781 9.0 0.0 0.0] Tf
(\260) show
n
669.96 149.553 m
642.66 142.413 l
S
/E2 /ColorSpace findRes cs 1.0 0.0 1.0 sc
162.84 228.573 m
/N14 [12.0 0.0 4.1041 12.0 0.0 0.0] Tf
(\002) show
170.4 222.573 m
/N22 9.0 Tf
(0) show
175.38 228.573 m
/N22 12.0 Tf
(=25)
[7.008 6.672 6.672 ] pdfxs
195.72 234.573 m
/N14 [9.0 0.0 3.0781 9.0 0.0 0.0] Tf
(\260) show
n
214.44 211.653 m
194.58 227.253 l
S
n
178.44 155.433 m
157.98 184.173 l
0.0 0.0 1.0 sc
S
0.0 1.0 0.0 sc
539.94 178.593 m
/N14 [12.0 0.0 4.1041 12.0 0.0 0.0] Tf
(\002) show
547.5 172.593 m
/N22 9.0 Tf
(0) show
552.48 178.593 m
/N22 12.0 Tf
(=55)
[7.008 6.672 6.672 ] pdfxs
572.82 184.593 m
/N14 [9.0 0.0 3.0781 9.0 0.0 0.0] Tf
(\260) show
n
616.98 190.113 m
575.04 183.633 l
S
Q
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%DocumentNeededResources:
%%+ font Arial,Italic
%%+ font TimesNewRoman,Bold
%%+ font Arial
%%+ font TimesNewRoman,BoldItalic
%%EOF
